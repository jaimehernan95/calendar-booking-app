{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,I,G,E,E,O,C,gB,I,G,I,E,E,SCGO,SAAS,IACd,QAAQ,GAAG,CAAC,CAAC,0BAA0B,EAAE,AAAA,EAAA,OAAM,CAAE,QAAQ,CAAA,CAAE,EAC3D,SAAS,cAAc,CAAC,SAAU,WAAW,CAAG,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,CAAC,CAAC,SAC1D,SAAS,cAAc,CAAC,gBAAiB,WAAW,CAAG,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,CAAC,CAAC,gBACjE,GACF,CAGO,SAAS,IACd,QAAQ,GAAG,CAAC,0BAIZ,EADqB,CAAM,CADD,IAAI,OAAO,QAAQ,GACC,CAEhD,CAiBA,IAAM,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,WAAW,CACnI,EAAoC,CACxC,QAAS,GAAI,SAAU,GAAI,MAAO,GAAI,MAAO,GAAI,IAAK,GAAI,KAAM,GAChE,KAAM,GAAI,OAAQ,GAAI,UAAW,GAAI,QAAS,GAAI,SAAU,GAAI,SAAU,EAC5E,EAGM,EAAwD,CAAC,EAGzD,EAAc,SAAS,aAAa,CAAC,UAc3C,SAAS,QAQH,EAPJ,QAAQ,GAAG,CAAC,wBAIZ,AAD0B,SAAS,gBAAgB,CAAC,uBAClC,OAAO,CAAC,AAAA,GAAY,EAAS,MAAM,IAMnD,EAFE,AAAsB,KAAtB,EAAY,KAAK,CAEH,CAAM,CADH,SAAS,EAAY,KAAK,EACX,CAIlB,CAAM,CADI,IAAI,OAAO,QAAQ,GACJ,CAI3C,QAAQ,GAAG,CAAC,qBAAsB,AA2FpC,WACE,IAAM,EAAmB,SAAS,cAAc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","sources":["<anon>","src/app.ts","node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"euqVc\", function(module, exports) {\n\n$parcel$export(module.exports, \"updateUI\", () => $f43313d21d3fd8e2$export$d1c957a54f7124bc);\n$parcel$export(module.exports, \"setupCalendar\", () => $f43313d21d3fd8e2$export$c6f7f92c8cfb6140);\n\nvar $8RAYl = parcelRequire(\"8RAYl\");\nfunction $f43313d21d3fd8e2$export$d1c957a54f7124bc() {\n    console.log(`Updating UI for language: ${(0, $8RAYl.default).language}`);\n    document.getElementById('title').textContent = (0, $8RAYl.default).t('title');\n    document.getElementById('instructions').textContent = (0, $8RAYl.default).t('instructions');\n    $f43313d21d3fd8e2$var$updateSchedule();\n}\nfunction $f43313d21d3fd8e2$export$c6f7f92c8cfb6140() {\n    console.log('Setting up calendar...');\n    // Use the English month name (from the constant array) for internal logic\n    const currentMonthIndex = new Date().getMonth();\n    const currentMonth = $f43313d21d3fd8e2$var$months[currentMonthIndex];\n    $f43313d21d3fd8e2$var$createCalendarView(currentMonth);\n}\n// Retrieve translated arrays from i18next\nfunction $f43313d21d3fd8e2$var$getTranslatedDaysOfWeek() {\n    return (0, $8RAYl.default).t('daysOfWeek', {\n        returnObjects: true\n    });\n}\nfunction $f43313d21d3fd8e2$var$getTranslatedTimes() {\n    return (0, $8RAYl.default).t('times', {\n        returnObjects: true\n    });\n}\n// For display purposes you might also translate the month names:\n// (Assumes your locales include a \"months\" array.)\nfunction $f43313d21d3fd8e2$var$getTranslatedMonths() {\n    return (0, $8RAYl.default).t('months', {\n        returnObjects: true\n    });\n}\n// Use a fixed internal array of months (keys must match monthDays keys)\nconst $f43313d21d3fd8e2$var$months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n];\nconst $f43313d21d3fd8e2$var$monthDays = {\n    January: 31,\n    February: 28,\n    March: 31,\n    April: 30,\n    May: 31,\n    June: 30,\n    July: 31,\n    August: 31,\n    September: 30,\n    October: 31,\n    November: 30,\n    December: 31\n};\n// Keeps track of booked slots\nconst $f43313d21d3fd8e2$var$bookedSlots = {};\n// Create the month dropdown for selecting the month.\nconst $f43313d21d3fd8e2$var$monthSelect = document.createElement('select');\n$f43313d21d3fd8e2$var$monthSelect.addEventListener('change', $f43313d21d3fd8e2$var$updateSchedule);\n$f43313d21d3fd8e2$var$months.forEach((month, index)=>{\n    const option = document.createElement('option');\n    option.value = index.toString();\n    // You can optionally use the translated month names here:\n    // const translatedMonths = getTranslatedMonths();\n    // option.textContent = translatedMonths[index];\n    option.textContent = month;\n    $f43313d21d3fd8e2$var$monthSelect.appendChild(option);\n});\ndocument.getElementById('schedule-container')?.appendChild($f43313d21d3fd8e2$var$monthSelect);\n// Update the calendar when language or month selection changes.\nfunction $f43313d21d3fd8e2$var$updateSchedule() {\n    console.log('Updating schedule...');\n    // Remove any existing calendar(s)\n    const existingCalendars = document.querySelectorAll('.calendar-container');\n    existingCalendars.forEach((calendar)=>calendar.remove());\n    // Use the fixed English month (internal key) to lookup days\n    let selectedMonth;\n    if ($f43313d21d3fd8e2$var$monthSelect.value !== '') {\n        const monthIndex = parseInt($f43313d21d3fd8e2$var$monthSelect.value);\n        selectedMonth = $f43313d21d3fd8e2$var$months[monthIndex];\n    } else {\n        // Fallback: use current month based on English keys\n        const currentMonthIndex = new Date().getMonth();\n        selectedMonth = $f43313d21d3fd8e2$var$months[currentMonthIndex];\n    }\n    // (Optional) Log the current selected language:\n    console.log(\"Selected language:\", $f43313d21d3fd8e2$var$getSelectedLanguage());\n    // Recreate the calendar using the internal English month name\n    $f43313d21d3fd8e2$var$createCalendarView(selectedMonth);\n}\n// Create the calendar view based on the internal month name\nfunction $f43313d21d3fd8e2$var$createCalendarView(month) {\n    const scheduleContainer = document.getElementById('schedule-container');\n    const calendarContainer = document.createElement('div');\n    calendarContainer.classList.add('calendar-container');\n    // Create table for the calendar\n    const table = document.createElement('table');\n    const headerRow = document.createElement('tr');\n    // Use translated days of the week for the header\n    $f43313d21d3fd8e2$var$getTranslatedDaysOfWeek().forEach((day)=>{\n        const th = document.createElement('th');\n        th.textContent = day;\n        headerRow.appendChild(th);\n    });\n    table.appendChild(headerRow);\n    let dayOfMonth = 1;\n    for(let i = 0; i < 6; i++){\n        const row = document.createElement('tr');\n        for(let j = 0; j < 7; j++){\n            const cell = document.createElement('td');\n            if (dayOfMonth <= $f43313d21d3fd8e2$var$monthDays[month]) {\n                const button = $f43313d21d3fd8e2$var$createDayButton(dayOfMonth, month);\n                cell.appendChild(button);\n                dayOfMonth++;\n            }\n            row.appendChild(cell);\n        }\n        table.appendChild(row);\n        if (dayOfMonth > $f43313d21d3fd8e2$var$monthDays[month]) break;\n    }\n    calendarContainer.appendChild(table);\n    scheduleContainer.appendChild(calendarContainer);\n}\n// Create a button for each day that shows the day number and triggers the time slots display\nfunction $f43313d21d3fd8e2$var$createDayButton(day, month) {\n    const button = document.createElement('button');\n    button.textContent = `${day}`;\n    button.addEventListener('click', ()=>$f43313d21d3fd8e2$var$displayTimeSlots(day, month));\n    return button;\n}\n// Display the available time slots for a given day and month\nfunction $f43313d21d3fd8e2$var$displayTimeSlots(day, month) {\n    let timeSlotsContainer = document.getElementById('time-slots-container');\n    if (!timeSlotsContainer) {\n        timeSlotsContainer = document.createElement('div');\n        timeSlotsContainer.id = 'time-slots-container';\n        document.body.appendChild(timeSlotsContainer);\n    }\n    timeSlotsContainer.innerHTML = '';\n    const availableSlots = $f43313d21d3fd8e2$var$bookedSlots[month]?.[day] || [];\n    const availableTimes = $f43313d21d3fd8e2$var$getTranslatedTimes().filter((time)=>!availableSlots.includes(time));\n    const slotTable = document.createElement('table');\n    availableTimes.forEach((time)=>{\n        const row = document.createElement('tr');\n        const timeCell = document.createElement('td');\n        timeCell.textContent = time;\n        row.appendChild(timeCell);\n        const bookButton = document.createElement('button');\n        bookButton.textContent = 'Book';\n        bookButton.addEventListener('click', ()=>$f43313d21d3fd8e2$var$handleBooking(day, month, time, bookButton));\n        row.appendChild(bookButton);\n        slotTable.appendChild(row);\n    });\n    timeSlotsContainer.appendChild(slotTable);\n}\n// Handle a booking by updating internal state and changing the button appearance\nfunction $f43313d21d3fd8e2$var$handleBooking(day, month, time, button) {\n    if (!$f43313d21d3fd8e2$var$bookedSlots[month]) $f43313d21d3fd8e2$var$bookedSlots[month] = {};\n    if (!$f43313d21d3fd8e2$var$bookedSlots[month][day]) $f43313d21d3fd8e2$var$bookedSlots[month][day] = [];\n    $f43313d21d3fd8e2$var$bookedSlots[month][day].push(time);\n    button.textContent = 'Booked';\n    button.disabled = true;\n    button.style.backgroundColor = 'red';\n}\n// This function now uses the correct dropdown ID: \"languageSwitch\"\nfunction $f43313d21d3fd8e2$var$getSelectedLanguage() {\n    const languageDropdown = document.getElementById(\"languageSwitch\");\n    return languageDropdown?.value || \"en\";\n}\n// Initial setup: create the calendar using the default language and current month.\n$f43313d21d3fd8e2$export$c6f7f92c8cfb6140();\n\n});\nparcelRegister(\"8RAYl\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $673ff3dfc4a496de$export$2e2bcd8739ae039);\nconst $673ff3dfc4a496de$var$isString = (obj)=>typeof obj === 'string';\nconst $673ff3dfc4a496de$var$defer = ()=>{\n    let res;\n    let rej;\n    const promise = new Promise((resolve, reject)=>{\n        res = resolve;\n        rej = reject;\n    });\n    promise.resolve = res;\n    promise.reject = rej;\n    return promise;\n};\nconst $673ff3dfc4a496de$var$makeString = (object)=>{\n    if (object == null) return '';\n    return '' + object;\n};\nconst $673ff3dfc4a496de$var$copy = (a, s, t)=>{\n    a.forEach((m)=>{\n        if (s[m]) t[m] = s[m];\n    });\n};\nconst $673ff3dfc4a496de$var$lastOfPathSeparatorRegExp = /###/g;\nconst $673ff3dfc4a496de$var$cleanKey = (key)=>key && key.indexOf('###') > -1 ? key.replace($673ff3dfc4a496de$var$lastOfPathSeparatorRegExp, '.') : key;\nconst $673ff3dfc4a496de$var$canNotTraverseDeeper = (object)=>!object || $673ff3dfc4a496de$var$isString(object);\nconst $673ff3dfc4a496de$var$getLastOfPath = (object, path, Empty)=>{\n    const stack = !$673ff3dfc4a496de$var$isString(path) ? path : path.split('.');\n    let stackIndex = 0;\n    while(stackIndex < stack.length - 1){\n        if ($673ff3dfc4a496de$var$canNotTraverseDeeper(object)) return {};\n        const key = $673ff3dfc4a496de$var$cleanKey(stack[stackIndex]);\n        if (!object[key] && Empty) object[key] = new Empty();\n        if (Object.prototype.hasOwnProperty.call(object, key)) object = object[key];\n        else object = {};\n        ++stackIndex;\n    }\n    if ($673ff3dfc4a496de$var$canNotTraverseDeeper(object)) return {};\n    return {\n        obj: object,\n        k: $673ff3dfc4a496de$var$cleanKey(stack[stackIndex])\n    };\n};\nconst $673ff3dfc4a496de$var$setPath = (object, path, newValue)=>{\n    const { obj: obj, k: k } = $673ff3dfc4a496de$var$getLastOfPath(object, path, Object);\n    if (obj !== undefined || path.length === 1) {\n        obj[k] = newValue;\n        return;\n    }\n    let e = path[path.length - 1];\n    let p = path.slice(0, path.length - 1);\n    let last = $673ff3dfc4a496de$var$getLastOfPath(object, p, Object);\n    while(last.obj === undefined && p.length){\n        e = `${p[p.length - 1]}.${e}`;\n        p = p.slice(0, p.length - 1);\n        last = $673ff3dfc4a496de$var$getLastOfPath(object, p, Object);\n        if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') last.obj = undefined;\n    }\n    last.obj[`${last.k}.${e}`] = newValue;\n};\nconst $673ff3dfc4a496de$var$pushPath = (object, path, newValue, concat)=>{\n    const { obj: obj, k: k } = $673ff3dfc4a496de$var$getLastOfPath(object, path, Object);\n    obj[k] = obj[k] || [];\n    obj[k].push(newValue);\n};\nconst $673ff3dfc4a496de$var$getPath = (object, path)=>{\n    const { obj: obj, k: k } = $673ff3dfc4a496de$var$getLastOfPath(object, path);\n    if (!obj) return undefined;\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n    return obj[k];\n};\nconst $673ff3dfc4a496de$var$getPathWithDefaults = (data, defaultData, key)=>{\n    const value = $673ff3dfc4a496de$var$getPath(data, key);\n    if (value !== undefined) return value;\n    return $673ff3dfc4a496de$var$getPath(defaultData, key);\n};\nconst $673ff3dfc4a496de$var$deepExtend = (target, source, overwrite)=>{\n    for(const prop in source)if (prop !== '__proto__' && prop !== 'constructor') {\n        if (prop in target) {\n            if ($673ff3dfc4a496de$var$isString(target[prop]) || target[prop] instanceof String || $673ff3dfc4a496de$var$isString(source[prop]) || source[prop] instanceof String) {\n                if (overwrite) target[prop] = source[prop];\n            } else $673ff3dfc4a496de$var$deepExtend(target[prop], source[prop], overwrite);\n        } else target[prop] = source[prop];\n    }\n    return target;\n};\nconst $673ff3dfc4a496de$var$regexEscape = (str)=>str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar $673ff3dfc4a496de$var$_entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;'\n};\nconst $673ff3dfc4a496de$var$escape = (data)=>{\n    if ($673ff3dfc4a496de$var$isString(data)) return data.replace(/[&<>\"'\\/]/g, (s)=>$673ff3dfc4a496de$var$_entityMap[s]);\n    return data;\n};\nclass $673ff3dfc4a496de$var$RegExpCache {\n    constructor(capacity){\n        this.capacity = capacity;\n        this.regExpMap = new Map();\n        this.regExpQueue = [];\n    }\n    getRegExp(pattern) {\n        const regExpFromCache = this.regExpMap.get(pattern);\n        if (regExpFromCache !== undefined) return regExpFromCache;\n        const regExpNew = new RegExp(pattern);\n        if (this.regExpQueue.length === this.capacity) this.regExpMap.delete(this.regExpQueue.shift());\n        this.regExpMap.set(pattern, regExpNew);\n        this.regExpQueue.push(pattern);\n        return regExpNew;\n    }\n}\nconst $673ff3dfc4a496de$var$chars = [\n    ' ',\n    ',',\n    '?',\n    '!',\n    ';'\n];\nconst $673ff3dfc4a496de$var$looksLikeObjectPathRegExpCache = new $673ff3dfc4a496de$var$RegExpCache(20);\nconst $673ff3dfc4a496de$var$looksLikeObjectPath = (key, nsSeparator, keySeparator)=>{\n    nsSeparator = nsSeparator || '';\n    keySeparator = keySeparator || '';\n    const possibleChars = $673ff3dfc4a496de$var$chars.filter((c)=>nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n    if (possibleChars.length === 0) return true;\n    const r = $673ff3dfc4a496de$var$looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map((c)=>c === '?' ? '\\\\?' : c).join('|')})`);\n    let matched = !r.test(key);\n    if (!matched) {\n        const ki = key.indexOf(keySeparator);\n        if (ki > 0 && !r.test(key.substring(0, ki))) matched = true;\n    }\n    return matched;\n};\nconst $673ff3dfc4a496de$var$deepFind = function(obj, path) {\n    let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n    if (!obj) return undefined;\n    if (obj[path]) {\n        if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n        return obj[path];\n    }\n    const tokens = path.split(keySeparator);\n    let current = obj;\n    for(let i = 0; i < tokens.length;){\n        if (!current || typeof current !== 'object') return undefined;\n        let next;\n        let nextPath = '';\n        for(let j = i; j < tokens.length; ++j){\n            if (j !== i) nextPath += keySeparator;\n            nextPath += tokens[j];\n            next = current[nextPath];\n            if (next !== undefined) {\n                if ([\n                    'string',\n                    'number',\n                    'boolean'\n                ].indexOf(typeof next) > -1 && j < tokens.length - 1) continue;\n                i += j - i + 1;\n                break;\n            }\n        }\n        current = next;\n    }\n    return current;\n};\nconst $673ff3dfc4a496de$var$getCleanedCode = (code)=>code?.replace('_', '-');\nconst $673ff3dfc4a496de$var$consoleLogger = {\n    type: 'logger',\n    log (args) {\n        this.output('log', args);\n    },\n    warn (args) {\n        this.output('warn', args);\n    },\n    error (args) {\n        this.output('error', args);\n    },\n    output (type, args) {\n        console?.[type]?.apply?.(console, args);\n    }\n};\nclass $673ff3dfc4a496de$var$Logger {\n    constructor(concreteLogger){\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.init(concreteLogger, options);\n    }\n    init(concreteLogger) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.prefix = options.prefix || 'i18next:';\n        this.logger = concreteLogger || $673ff3dfc4a496de$var$consoleLogger;\n        this.options = options;\n        this.debug = options.debug;\n    }\n    log() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n        return this.forward(args, 'log', '', true);\n    }\n    warn() {\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];\n        return this.forward(args, 'warn', '', true);\n    }\n    error() {\n        for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)args[_key3] = arguments[_key3];\n        return this.forward(args, 'error', '');\n    }\n    deprecate() {\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)args[_key4] = arguments[_key4];\n        return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n    forward(args, lvl, prefix, debugOnly) {\n        if (debugOnly && !this.debug) return null;\n        if ($673ff3dfc4a496de$var$isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n        return this.logger[lvl](args);\n    }\n    create(moduleName) {\n        return new $673ff3dfc4a496de$var$Logger(this.logger, {\n            prefix: `${this.prefix}:${moduleName}:`,\n            ...this.options\n        });\n    }\n    clone(options) {\n        options = options || this.options;\n        options.prefix = options.prefix || this.prefix;\n        return new $673ff3dfc4a496de$var$Logger(this.logger, options);\n    }\n}\nvar $673ff3dfc4a496de$var$baseLogger = new $673ff3dfc4a496de$var$Logger();\nclass $673ff3dfc4a496de$var$EventEmitter {\n    constructor(){\n        this.observers = {};\n    }\n    on(events, listener) {\n        events.split(' ').forEach((event)=>{\n            if (!this.observers[event]) this.observers[event] = new Map();\n            const numListeners = this.observers[event].get(listener) || 0;\n            this.observers[event].set(listener, numListeners + 1);\n        });\n        return this;\n    }\n    off(event, listener) {\n        if (!this.observers[event]) return;\n        if (!listener) {\n            delete this.observers[event];\n            return;\n        }\n        this.observers[event].delete(listener);\n    }\n    emit(event) {\n        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];\n        if (this.observers[event]) {\n            const cloned = Array.from(this.observers[event].entries());\n            cloned.forEach((_ref)=>{\n                let [observer, numTimesAdded] = _ref;\n                for(let i = 0; i < numTimesAdded; i++)observer(...args);\n            });\n        }\n        if (this.observers['*']) {\n            const cloned = Array.from(this.observers['*'].entries());\n            cloned.forEach((_ref2)=>{\n                let [observer, numTimesAdded] = _ref2;\n                for(let i = 0; i < numTimesAdded; i++)observer.apply(observer, [\n                    event,\n                    ...args\n                ]);\n            });\n        }\n    }\n}\nclass $673ff3dfc4a496de$var$ResourceStore extends $673ff3dfc4a496de$var$EventEmitter {\n    constructor(data){\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            ns: [\n                'translation'\n            ],\n            defaultNS: 'translation'\n        };\n        super();\n        this.data = data || {};\n        this.options = options;\n        if (this.options.keySeparator === undefined) this.options.keySeparator = '.';\n        if (this.options.ignoreJSONStructure === undefined) this.options.ignoreJSONStructure = true;\n    }\n    addNamespaces(ns) {\n        if (this.options.ns.indexOf(ns) < 0) this.options.ns.push(ns);\n    }\n    removeNamespaces(ns) {\n        const index = this.options.ns.indexOf(ns);\n        if (index > -1) this.options.ns.splice(index, 1);\n    }\n    getResource(lng, ns, key) {\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n        const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n        let path;\n        if (lng.indexOf('.') > -1) path = lng.split('.');\n        else {\n            path = [\n                lng,\n                ns\n            ];\n            if (key) {\n                if (Array.isArray(key)) path.push(...key);\n                else if ($673ff3dfc4a496de$var$isString(key) && keySeparator) path.push(...key.split(keySeparator));\n                else path.push(key);\n            }\n        }\n        const result = $673ff3dfc4a496de$var$getPath(this.data, path);\n        if (!result && !ns && !key && lng.indexOf('.') > -1) {\n            lng = path[0];\n            ns = path[1];\n            key = path.slice(2).join('.');\n        }\n        if (result || !ignoreJSONStructure || !$673ff3dfc4a496de$var$isString(key)) return result;\n        return $673ff3dfc4a496de$var$deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n    }\n    addResource(lng, ns, key, value) {\n        let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n            silent: false\n        };\n        const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n        let path = [\n            lng,\n            ns\n        ];\n        if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n        if (lng.indexOf('.') > -1) {\n            path = lng.split('.');\n            value = ns;\n            ns = path[1];\n        }\n        this.addNamespaces(ns);\n        $673ff3dfc4a496de$var$setPath(this.data, path, value);\n        if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n    addResources(lng, ns, resources) {\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n            silent: false\n        };\n        for(const m in resources)if ($673ff3dfc4a496de$var$isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n            silent: true\n        });\n        if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n    addResourceBundle(lng, ns, resources, deep, overwrite) {\n        let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n            silent: false,\n            skipCopy: false\n        };\n        let path = [\n            lng,\n            ns\n        ];\n        if (lng.indexOf('.') > -1) {\n            path = lng.split('.');\n            deep = resources;\n            resources = ns;\n            ns = path[1];\n        }\n        this.addNamespaces(ns);\n        let pack = $673ff3dfc4a496de$var$getPath(this.data, path) || {};\n        if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n        if (deep) $673ff3dfc4a496de$var$deepExtend(pack, resources, overwrite);\n        else pack = {\n            ...pack,\n            ...resources\n        };\n        $673ff3dfc4a496de$var$setPath(this.data, path, pack);\n        if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n    removeResourceBundle(lng, ns) {\n        if (this.hasResourceBundle(lng, ns)) delete this.data[lng][ns];\n        this.removeNamespaces(ns);\n        this.emit('removed', lng, ns);\n    }\n    hasResourceBundle(lng, ns) {\n        return this.getResource(lng, ns) !== undefined;\n    }\n    getResourceBundle(lng, ns) {\n        if (!ns) ns = this.options.defaultNS;\n        return this.getResource(lng, ns);\n    }\n    getDataByLanguage(lng) {\n        return this.data[lng];\n    }\n    hasLanguageSomeTranslations(lng) {\n        const data = this.getDataByLanguage(lng);\n        const n = data && Object.keys(data) || [];\n        return !!n.find((v)=>data[v] && Object.keys(data[v]).length > 0);\n    }\n    toJSON() {\n        return this.data;\n    }\n}\nvar $673ff3dfc4a496de$var$postProcessor = {\n    processors: {},\n    addPostProcessor (module) {\n        this.processors[module.name] = module;\n    },\n    handle (processors, value, key, options, translator) {\n        processors.forEach((processor)=>{\n            value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n        });\n        return value;\n    }\n};\nconst $673ff3dfc4a496de$var$checkedLoadedFor = {};\nconst $673ff3dfc4a496de$var$shouldHandleAsObject = (res)=>!$673ff3dfc4a496de$var$isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass $673ff3dfc4a496de$var$Translator extends $673ff3dfc4a496de$var$EventEmitter {\n    constructor(services){\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        super();\n        $673ff3dfc4a496de$var$copy([\n            'resourceStore',\n            'languageUtils',\n            'pluralResolver',\n            'interpolator',\n            'backendConnector',\n            'i18nFormat',\n            'utils'\n        ], services, this);\n        this.options = options;\n        if (this.options.keySeparator === undefined) this.options.keySeparator = '.';\n        this.logger = $673ff3dfc4a496de$var$baseLogger.create('translator');\n    }\n    changeLanguage(lng) {\n        if (lng) this.language = lng;\n    }\n    exists(key) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            interpolation: {}\n        };\n        if (key == null) return false;\n        const resolved = this.resolve(key, options);\n        return resolved?.res !== undefined;\n    }\n    extractFromKey(key, options) {\n        let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n        if (nsSeparator === undefined) nsSeparator = ':';\n        const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n        let namespaces = options.ns || this.options.defaultNS || [];\n        const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n        const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !$673ff3dfc4a496de$var$looksLikeObjectPath(key, nsSeparator, keySeparator);\n        if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n            const m = key.match(this.interpolator.nestingRegexp);\n            if (m && m.length > 0) return {\n                key: key,\n                namespaces: $673ff3dfc4a496de$var$isString(namespaces) ? [\n                    namespaces\n                ] : namespaces\n            };\n            const parts = key.split(nsSeparator);\n            if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n            key = parts.join(keySeparator);\n        }\n        return {\n            key: key,\n            namespaces: $673ff3dfc4a496de$var$isString(namespaces) ? [\n                namespaces\n            ] : namespaces\n        };\n    }\n    translate(keys, options, lastKey) {\n        if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) options = this.options.overloadTranslationOptionHandler(arguments);\n        if (typeof options === 'object') options = {\n            ...options\n        };\n        if (!options) options = {};\n        if (keys == null) return '';\n        if (!Array.isArray(keys)) keys = [\n            String(keys)\n        ];\n        const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n        const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n        const { key: key, namespaces: namespaces } = this.extractFromKey(keys[keys.length - 1], options);\n        const namespace = namespaces[namespaces.length - 1];\n        const lng = options.lng || this.language;\n        const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n        if (lng?.toLowerCase() === 'cimode') {\n            if (appendNamespaceToCIMode) {\n                const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n                if (returnDetails) return {\n                    res: `${namespace}${nsSeparator}${key}`,\n                    usedKey: key,\n                    exactUsedKey: key,\n                    usedLng: lng,\n                    usedNS: namespace,\n                    usedParams: this.getUsedParamsDetails(options)\n                };\n                return `${namespace}${nsSeparator}${key}`;\n            }\n            if (returnDetails) return {\n                res: key,\n                usedKey: key,\n                exactUsedKey: key,\n                usedLng: lng,\n                usedNS: namespace,\n                usedParams: this.getUsedParamsDetails(options)\n            };\n            return key;\n        }\n        const resolved = this.resolve(keys, options);\n        let res = resolved?.res;\n        const resUsedKey = resolved?.usedKey || key;\n        const resExactUsedKey = resolved?.exactUsedKey || key;\n        const noObject = [\n            '[object Number]',\n            '[object Function]',\n            '[object RegExp]'\n        ];\n        const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n        const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n        const needsPluralHandling = options.count !== undefined && !$673ff3dfc4a496de$var$isString(options.count);\n        const hasDefaultValue = $673ff3dfc4a496de$var$Translator.hasDefaultValue(options);\n        const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n        const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n            ordinal: false\n        }) : '';\n        const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n        const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n        let resForObjHndl = res;\n        if (handleAsObjectInI18nFormat && !res && hasDefaultValue) resForObjHndl = defaultValue;\n        const handleAsObject = $673ff3dfc4a496de$var$shouldHandleAsObject(resForObjHndl);\n        const resType = Object.prototype.toString.apply(resForObjHndl);\n        if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !($673ff3dfc4a496de$var$isString(joinArrays) && Array.isArray(resForObjHndl))) {\n            if (!options.returnObjects && !this.options.returnObjects) {\n                if (!this.options.returnedObjectHandler) this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n                const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n                    ...options,\n                    ns: namespaces\n                }) : `key '${key} (${this.language})' returned an object instead of string.`;\n                if (returnDetails) {\n                    resolved.res = r;\n                    resolved.usedParams = this.getUsedParamsDetails(options);\n                    return resolved;\n                }\n                return r;\n            }\n            if (keySeparator) {\n                const resTypeIsArray = Array.isArray(resForObjHndl);\n                const copy = resTypeIsArray ? [] : {};\n                const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n                for(const m in resForObjHndl)if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n                    const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n                    if (hasDefaultValue && !res) copy[m] = this.translate(deepKey, {\n                        ...options,\n                        defaultValue: $673ff3dfc4a496de$var$shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                        joinArrays: false,\n                        ns: namespaces\n                    });\n                    else copy[m] = this.translate(deepKey, {\n                        ...options,\n                        joinArrays: false,\n                        ns: namespaces\n                    });\n                    if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n                }\n                res = copy;\n            }\n        } else if (handleAsObjectInI18nFormat && $673ff3dfc4a496de$var$isString(joinArrays) && Array.isArray(res)) {\n            res = res.join(joinArrays);\n            if (res) res = this.extendTranslation(res, keys, options, lastKey);\n        } else {\n            let usedDefault = false;\n            let usedKey = false;\n            if (!this.isValidLookup(res) && hasDefaultValue) {\n                usedDefault = true;\n                res = defaultValue;\n            }\n            if (!this.isValidLookup(res)) {\n                usedKey = true;\n                res = key;\n            }\n            const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n            const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n            const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n            if (usedKey || usedDefault || updateMissing) {\n                this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n                if (keySeparator) {\n                    const fk = this.resolve(key, {\n                        ...options,\n                        keySeparator: false\n                    });\n                    if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n                }\n                let lngs = [];\n                const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n                if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) for(let i = 0; i < fallbackLngs.length; i++)lngs.push(fallbackLngs[i]);\n                else if (this.options.saveMissingTo === 'all') lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n                else lngs.push(options.lng || this.language);\n                const send = (l, k, specificDefaultValue)=>{\n                    const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n                    if (this.options.missingKeyHandler) this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n                    else if (this.backendConnector?.saveMissing) this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n                    this.emit('missingKey', l, namespace, k, res);\n                };\n                if (this.options.saveMissing) {\n                    if (this.options.saveMissingPlurals && needsPluralHandling) lngs.forEach((language)=>{\n                        const suffixes = this.pluralResolver.getSuffixes(language, options);\n                        if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) suffixes.push(`${this.options.pluralSeparator}zero`);\n                        suffixes.forEach((suffix)=>{\n                            send([\n                                language\n                            ], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n                        });\n                    });\n                    else send(lngs, key, defaultValue);\n                }\n            }\n            res = this.extendTranslation(res, keys, options, resolved, lastKey);\n            if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n            if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n        }\n        if (returnDetails) {\n            resolved.res = res;\n            resolved.usedParams = this.getUsedParamsDetails(options);\n            return resolved;\n        }\n        return res;\n    }\n    extendTranslation(res, key, options, resolved, lastKey) {\n        var _this = this;\n        if (this.i18nFormat?.parse) res = this.i18nFormat.parse(res, {\n            ...this.options.interpolation.defaultVariables,\n            ...options\n        }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n            resolved: resolved\n        });\n        else if (!options.skipInterpolation) {\n            if (options.interpolation) this.interpolator.init({\n                ...options,\n                interpolation: {\n                    ...this.options.interpolation,\n                    ...options.interpolation\n                }\n            });\n            const skipOnVariables = $673ff3dfc4a496de$var$isString(res) && (options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n            let nestBef;\n            if (skipOnVariables) {\n                const nb = res.match(this.interpolator.nestingRegexp);\n                nestBef = nb && nb.length;\n            }\n            let data = options.replace && !$673ff3dfc4a496de$var$isString(options.replace) ? options.replace : options;\n            if (this.options.interpolation.defaultVariables) data = {\n                ...this.options.interpolation.defaultVariables,\n                ...data\n            };\n            res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n            if (skipOnVariables) {\n                const na = res.match(this.interpolator.nestingRegexp);\n                const nestAft = na && na.length;\n                if (nestBef < nestAft) options.nest = false;\n            }\n            if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n            if (options.nest !== false) res = this.interpolator.nest(res, function() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                if (lastKey?.[0] === args[0] && !options.context) {\n                    _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n                    return null;\n                }\n                return _this.translate(...args, key);\n            }, options);\n            if (options.interpolation) this.interpolator.reset();\n        }\n        const postProcess = options.postProcess || this.options.postProcess;\n        const postProcessorNames = $673ff3dfc4a496de$var$isString(postProcess) ? [\n            postProcess\n        ] : postProcess;\n        if (res != null && postProcessorNames?.length && options.applyPostProcessor !== false) res = $673ff3dfc4a496de$var$postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n            i18nResolved: {\n                ...resolved,\n                usedParams: this.getUsedParamsDetails(options)\n            },\n            ...options\n        } : options, this);\n        return res;\n    }\n    resolve(keys) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        let found;\n        let usedKey;\n        let exactUsedKey;\n        let usedLng;\n        let usedNS;\n        if ($673ff3dfc4a496de$var$isString(keys)) keys = [\n            keys\n        ];\n        keys.forEach((k)=>{\n            if (this.isValidLookup(found)) return;\n            const extracted = this.extractFromKey(k, options);\n            const key = extracted.key;\n            usedKey = key;\n            let namespaces = extracted.namespaces;\n            if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n            const needsPluralHandling = options.count !== undefined && !$673ff3dfc4a496de$var$isString(options.count);\n            const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n            const needsContextHandling = options.context !== undefined && ($673ff3dfc4a496de$var$isString(options.context) || typeof options.context === 'number') && options.context !== '';\n            const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n            namespaces.forEach((ns)=>{\n                if (this.isValidLookup(found)) return;\n                usedNS = ns;\n                if (!$673ff3dfc4a496de$var$checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n                    $673ff3dfc4a496de$var$checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n                    this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n                }\n                codes.forEach((code)=>{\n                    if (this.isValidLookup(found)) return;\n                    usedLng = code;\n                    const finalKeys = [\n                        key\n                    ];\n                    if (this.i18nFormat?.addLookupKeys) this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n                    else {\n                        let pluralSuffix;\n                        if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n                        const zeroSuffix = `${this.options.pluralSeparator}zero`;\n                        const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n                        if (needsPluralHandling) {\n                            finalKeys.push(key + pluralSuffix);\n                            if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                            if (needsZeroSuffixLookup) finalKeys.push(key + zeroSuffix);\n                        }\n                        if (needsContextHandling) {\n                            const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n                            finalKeys.push(contextKey);\n                            if (needsPluralHandling) {\n                                finalKeys.push(contextKey + pluralSuffix);\n                                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                                if (needsZeroSuffixLookup) finalKeys.push(contextKey + zeroSuffix);\n                            }\n                        }\n                    }\n                    let possibleKey;\n                    while(possibleKey = finalKeys.pop())if (!this.isValidLookup(found)) {\n                        exactUsedKey = possibleKey;\n                        found = this.getResource(code, ns, possibleKey, options);\n                    }\n                });\n            });\n        });\n        return {\n            res: found,\n            usedKey: usedKey,\n            exactUsedKey: exactUsedKey,\n            usedLng: usedLng,\n            usedNS: usedNS\n        };\n    }\n    isValidLookup(res) {\n        return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n    getResource(code, ns, key) {\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n        return this.resourceStore.getResource(code, ns, key, options);\n    }\n    getUsedParamsDetails() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const optionsKeys = [\n            'defaultValue',\n            'ordinal',\n            'context',\n            'replace',\n            'lng',\n            'lngs',\n            'fallbackLng',\n            'ns',\n            'keySeparator',\n            'nsSeparator',\n            'returnObjects',\n            'returnDetails',\n            'joinArrays',\n            'postProcess',\n            'interpolation'\n        ];\n        const useOptionsReplaceForData = options.replace && !$673ff3dfc4a496de$var$isString(options.replace);\n        let data = useOptionsReplaceForData ? options.replace : options;\n        if (useOptionsReplaceForData && typeof options.count !== 'undefined') data.count = options.count;\n        if (this.options.interpolation.defaultVariables) data = {\n            ...this.options.interpolation.defaultVariables,\n            ...data\n        };\n        if (!useOptionsReplaceForData) {\n            data = {\n                ...data\n            };\n            for (const key of optionsKeys)delete data[key];\n        }\n        return data;\n    }\n    static hasDefaultValue(options) {\n        const prefix = 'defaultValue';\n        for(const option in options){\n            if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) return true;\n        }\n        return false;\n    }\n}\nclass $673ff3dfc4a496de$var$LanguageUtil {\n    constructor(options){\n        this.options = options;\n        this.supportedLngs = this.options.supportedLngs || false;\n        this.logger = $673ff3dfc4a496de$var$baseLogger.create('languageUtils');\n    }\n    getScriptPartFromCode(code) {\n        code = $673ff3dfc4a496de$var$getCleanedCode(code);\n        if (!code || code.indexOf('-') < 0) return null;\n        const p = code.split('-');\n        if (p.length === 2) return null;\n        p.pop();\n        if (p[p.length - 1].toLowerCase() === 'x') return null;\n        return this.formatLanguageCode(p.join('-'));\n    }\n    getLanguagePartFromCode(code) {\n        code = $673ff3dfc4a496de$var$getCleanedCode(code);\n        if (!code || code.indexOf('-') < 0) return code;\n        const p = code.split('-');\n        return this.formatLanguageCode(p[0]);\n    }\n    formatLanguageCode(code) {\n        if ($673ff3dfc4a496de$var$isString(code) && code.indexOf('-') > -1) {\n            let formattedCode;\n            try {\n                formattedCode = Intl.getCanonicalLocales(code)[0];\n            } catch (e) {}\n            if (formattedCode && this.options.lowerCaseLng) formattedCode = formattedCode.toLowerCase();\n            if (formattedCode) return formattedCode;\n            if (this.options.lowerCaseLng) return code.toLowerCase();\n            return code;\n        }\n        return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n    isSupportedCode(code) {\n        if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) code = this.getLanguagePartFromCode(code);\n        return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n    getBestMatchFromCodes(codes) {\n        if (!codes) return null;\n        let found;\n        codes.forEach((code)=>{\n            if (found) return;\n            const cleanedLng = this.formatLanguageCode(code);\n            if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n        });\n        if (!found && this.options.supportedLngs) codes.forEach((code)=>{\n            if (found) return;\n            const lngOnly = this.getLanguagePartFromCode(code);\n            if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n            found = this.options.supportedLngs.find((supportedLng)=>{\n                if (supportedLng === lngOnly) return supportedLng;\n                if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n                if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n                if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n            });\n        });\n        if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n        return found;\n    }\n    getFallbackCodes(fallbacks, code) {\n        if (!fallbacks) return [];\n        if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n        if ($673ff3dfc4a496de$var$isString(fallbacks)) fallbacks = [\n            fallbacks\n        ];\n        if (Array.isArray(fallbacks)) return fallbacks;\n        if (!code) return fallbacks.default || [];\n        let found = fallbacks[code];\n        if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n        if (!found) found = fallbacks[this.formatLanguageCode(code)];\n        if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n        if (!found) found = fallbacks.default;\n        return found || [];\n    }\n    toResolveHierarchy(code, fallbackCode) {\n        const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n        const codes = [];\n        const addCode = (c)=>{\n            if (!c) return;\n            if (this.isSupportedCode(c)) codes.push(c);\n            else this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n        };\n        if ($673ff3dfc4a496de$var$isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n            if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n            if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n            if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n        } else if ($673ff3dfc4a496de$var$isString(code)) addCode(this.formatLanguageCode(code));\n        fallbackCodes.forEach((fc)=>{\n            if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n        });\n        return codes;\n    }\n}\nconst $673ff3dfc4a496de$var$suffixesOrder = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    few: 3,\n    many: 4,\n    other: 5\n};\nconst $673ff3dfc4a496de$var$dummyRule = {\n    select: (count)=>count === 1 ? 'one' : 'other',\n    resolvedOptions: ()=>({\n            pluralCategories: [\n                'one',\n                'other'\n            ]\n        })\n};\nclass $673ff3dfc4a496de$var$PluralResolver {\n    constructor(languageUtils){\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.languageUtils = languageUtils;\n        this.options = options;\n        this.logger = $673ff3dfc4a496de$var$baseLogger.create('pluralResolver');\n        this.pluralRulesCache = {};\n    }\n    addRule(lng, obj) {\n        this.rules[lng] = obj;\n    }\n    clearCache() {\n        this.pluralRulesCache = {};\n    }\n    getRule(code) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const cleanedCode = $673ff3dfc4a496de$var$getCleanedCode(code === 'dev' ? 'en' : code);\n        const type = options.ordinal ? 'ordinal' : 'cardinal';\n        const cacheKey = JSON.stringify({\n            cleanedCode: cleanedCode,\n            type: type\n        });\n        if (cacheKey in this.pluralRulesCache) return this.pluralRulesCache[cacheKey];\n        let rule;\n        try {\n            rule = new Intl.PluralRules(cleanedCode, {\n                type: type\n            });\n        } catch (err) {\n            if (!Intl) {\n                this.logger.error('No Intl support, please use an Intl polyfill!');\n                return $673ff3dfc4a496de$var$dummyRule;\n            }\n            if (!code.match(/-|_/)) return $673ff3dfc4a496de$var$dummyRule;\n            const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n            rule = this.getRule(lngPart, options);\n        }\n        this.pluralRulesCache[cacheKey] = rule;\n        return rule;\n    }\n    needsPlural(code) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        let rule = this.getRule(code, options);\n        if (!rule) rule = this.getRule('dev', options);\n        return rule?.resolvedOptions().pluralCategories.length > 1;\n    }\n    getPluralFormsOfKey(code, key) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        return this.getSuffixes(code, options).map((suffix)=>`${key}${suffix}`);\n    }\n    getSuffixes(code) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        let rule = this.getRule(code, options);\n        if (!rule) rule = this.getRule('dev', options);\n        if (!rule) return [];\n        return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2)=>$673ff3dfc4a496de$var$suffixesOrder[pluralCategory1] - $673ff3dfc4a496de$var$suffixesOrder[pluralCategory2]).map((pluralCategory)=>`${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    getSuffix(code, count) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        const rule = this.getRule(code, options);\n        if (rule) return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n        this.logger.warn(`no plural rule found for: ${code}`);\n        return this.getSuffix('dev', count, options);\n    }\n}\nconst $673ff3dfc4a496de$var$deepFindWithDefaults = function(data, defaultData, key) {\n    let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n    let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let path = $673ff3dfc4a496de$var$getPathWithDefaults(data, defaultData, key);\n    if (!path && ignoreJSONStructure && $673ff3dfc4a496de$var$isString(key)) {\n        path = $673ff3dfc4a496de$var$deepFind(data, key, keySeparator);\n        if (path === undefined) path = $673ff3dfc4a496de$var$deepFind(defaultData, key, keySeparator);\n    }\n    return path;\n};\nconst $673ff3dfc4a496de$var$regexSafe = (val)=>val.replace(/\\$/g, '$$$$');\nclass $673ff3dfc4a496de$var$Interpolator {\n    constructor(){\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.logger = $673ff3dfc4a496de$var$baseLogger.create('interpolator');\n        this.options = options;\n        this.format = options?.interpolation?.format || ((value)=>value);\n        this.init(options);\n    }\n    init() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (!options.interpolation) options.interpolation = {\n            escapeValue: true\n        };\n        const { escape: escape$1, escapeValue: escapeValue, useRawValueToEscape: useRawValueToEscape, prefix: prefix, prefixEscaped: prefixEscaped, suffix: suffix, suffixEscaped: suffixEscaped, formatSeparator: formatSeparator, unescapeSuffix: unescapeSuffix, unescapePrefix: unescapePrefix, nestingPrefix: nestingPrefix, nestingPrefixEscaped: nestingPrefixEscaped, nestingSuffix: nestingSuffix, nestingSuffixEscaped: nestingSuffixEscaped, nestingOptionsSeparator: nestingOptionsSeparator, maxReplaces: maxReplaces, alwaysFormat: alwaysFormat } = options.interpolation;\n        this.escape = escape$1 !== undefined ? escape$1 : $673ff3dfc4a496de$var$escape;\n        this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n        this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n        this.prefix = prefix ? $673ff3dfc4a496de$var$regexEscape(prefix) : prefixEscaped || '{{';\n        this.suffix = suffix ? $673ff3dfc4a496de$var$regexEscape(suffix) : suffixEscaped || '}}';\n        this.formatSeparator = formatSeparator || ',';\n        this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n        this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n        this.nestingPrefix = nestingPrefix ? $673ff3dfc4a496de$var$regexEscape(nestingPrefix) : nestingPrefixEscaped || $673ff3dfc4a496de$var$regexEscape('$t(');\n        this.nestingSuffix = nestingSuffix ? $673ff3dfc4a496de$var$regexEscape(nestingSuffix) : nestingSuffixEscaped || $673ff3dfc4a496de$var$regexEscape(')');\n        this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n        this.maxReplaces = maxReplaces || 1000;\n        this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n        this.resetRegExp();\n    }\n    reset() {\n        if (this.options) this.init(this.options);\n    }\n    resetRegExp() {\n        const getOrResetRegExp = (existingRegExp, pattern)=>{\n            if (existingRegExp?.source === pattern) {\n                existingRegExp.lastIndex = 0;\n                return existingRegExp;\n            }\n            return new RegExp(pattern, 'g');\n        };\n        this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n        this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n        this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n    }\n    interpolate(str, data, lng, options) {\n        let match;\n        let value;\n        let replaces;\n        const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n        const handleFormat = (key)=>{\n            if (key.indexOf(this.formatSeparator) < 0) {\n                const path = $673ff3dfc4a496de$var$deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n                return this.alwaysFormat ? this.format(path, undefined, lng, {\n                    ...options,\n                    ...data,\n                    interpolationkey: key\n                }) : path;\n            }\n            const p = key.split(this.formatSeparator);\n            const k = p.shift().trim();\n            const f = p.join(this.formatSeparator).trim();\n            return this.format($673ff3dfc4a496de$var$deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n                ...options,\n                ...data,\n                interpolationkey: k\n            });\n        };\n        this.resetRegExp();\n        const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n        const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n        const todos = [\n            {\n                regex: this.regexpUnescape,\n                safeValue: (val)=>$673ff3dfc4a496de$var$regexSafe(val)\n            },\n            {\n                regex: this.regexp,\n                safeValue: (val)=>this.escapeValue ? $673ff3dfc4a496de$var$regexSafe(this.escape(val)) : $673ff3dfc4a496de$var$regexSafe(val)\n            }\n        ];\n        todos.forEach((todo)=>{\n            replaces = 0;\n            while(match = todo.regex.exec(str)){\n                const matchedVar = match[1].trim();\n                value = handleFormat(matchedVar);\n                if (value === undefined) {\n                    if (typeof missingInterpolationHandler === 'function') {\n                        const temp = missingInterpolationHandler(str, match, options);\n                        value = $673ff3dfc4a496de$var$isString(temp) ? temp : '';\n                    } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) value = '';\n                    else if (skipOnVariables) {\n                        value = match[0];\n                        continue;\n                    } else {\n                        this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n                        value = '';\n                    }\n                } else if (!$673ff3dfc4a496de$var$isString(value) && !this.useRawValueToEscape) value = $673ff3dfc4a496de$var$makeString(value);\n                const safeValue = todo.safeValue(value);\n                str = str.replace(match[0], safeValue);\n                if (skipOnVariables) {\n                    todo.regex.lastIndex += value.length;\n                    todo.regex.lastIndex -= match[0].length;\n                } else todo.regex.lastIndex = 0;\n                replaces++;\n                if (replaces >= this.maxReplaces) break;\n            }\n        });\n        return str;\n    }\n    nest(str, fc) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        let match;\n        let value;\n        let clonedOptions;\n        const handleHasOptions = (key, inheritedOptions)=>{\n            const sep = this.nestingOptionsSeparator;\n            if (key.indexOf(sep) < 0) return key;\n            const c = key.split(new RegExp(`${sep}[ ]*{`));\n            let optionsString = `{${c[1]}`;\n            key = c[0];\n            optionsString = this.interpolate(optionsString, clonedOptions);\n            const matchedSingleQuotes = optionsString.match(/'/g);\n            const matchedDoubleQuotes = optionsString.match(/\"/g);\n            if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) optionsString = optionsString.replace(/'/g, '\"');\n            try {\n                clonedOptions = JSON.parse(optionsString);\n                if (inheritedOptions) clonedOptions = {\n                    ...inheritedOptions,\n                    ...clonedOptions\n                };\n            } catch (e) {\n                this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n                return `${key}${sep}${optionsString}`;\n            }\n            if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n            return key;\n        };\n        while(match = this.nestingRegexp.exec(str)){\n            let formatters = [];\n            clonedOptions = {\n                ...options\n            };\n            clonedOptions = clonedOptions.replace && !$673ff3dfc4a496de$var$isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n            clonedOptions.applyPostProcessor = false;\n            delete clonedOptions.defaultValue;\n            let doReduce = false;\n            if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n                const r = match[1].split(this.formatSeparator).map((elem)=>elem.trim());\n                match[1] = r.shift();\n                formatters = r;\n                doReduce = true;\n            }\n            value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n            if (value && match[0] === str && !$673ff3dfc4a496de$var$isString(value)) return value;\n            if (!$673ff3dfc4a496de$var$isString(value)) value = $673ff3dfc4a496de$var$makeString(value);\n            if (!value) {\n                this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n                value = '';\n            }\n            if (doReduce) value = formatters.reduce((v, f)=>this.format(v, f, options.lng, {\n                    ...options,\n                    interpolationkey: match[1].trim()\n                }), value.trim());\n            str = str.replace(match[0], value);\n            this.regexp.lastIndex = 0;\n        }\n        return str;\n    }\n}\nconst $673ff3dfc4a496de$var$parseFormatStr = (formatStr)=>{\n    let formatName = formatStr.toLowerCase().trim();\n    const formatOptions = {};\n    if (formatStr.indexOf('(') > -1) {\n        const p = formatStr.split('(');\n        formatName = p[0].toLowerCase().trim();\n        const optStr = p[1].substring(0, p[1].length - 1);\n        if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n            if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n        } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n            if (!formatOptions.range) formatOptions.range = optStr.trim();\n        } else {\n            const opts = optStr.split(';');\n            opts.forEach((opt)=>{\n                if (opt) {\n                    const [key, ...rest] = opt.split(':');\n                    const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n                    const trimmedKey = key.trim();\n                    if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n                    if (val === 'false') formatOptions[trimmedKey] = false;\n                    if (val === 'true') formatOptions[trimmedKey] = true;\n                    if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n                }\n            });\n        }\n    }\n    return {\n        formatName: formatName,\n        formatOptions: formatOptions\n    };\n};\nconst $673ff3dfc4a496de$var$createCachedFormatter = (fn)=>{\n    const cache = {};\n    return (val, lng, options)=>{\n        let optForCache = options;\n        if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) optForCache = {\n            ...optForCache,\n            [options.interpolationkey]: undefined\n        };\n        const key = lng + JSON.stringify(optForCache);\n        let formatter = cache[key];\n        if (!formatter) {\n            formatter = fn($673ff3dfc4a496de$var$getCleanedCode(lng), options);\n            cache[key] = formatter;\n        }\n        return formatter(val);\n    };\n};\nclass $673ff3dfc4a496de$var$Formatter {\n    constructor(){\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.logger = $673ff3dfc4a496de$var$baseLogger.create('formatter');\n        this.options = options;\n        this.formats = {\n            number: $673ff3dfc4a496de$var$createCachedFormatter((lng, opt)=>{\n                const formatter = new Intl.NumberFormat(lng, {\n                    ...opt\n                });\n                return (val)=>formatter.format(val);\n            }),\n            currency: $673ff3dfc4a496de$var$createCachedFormatter((lng, opt)=>{\n                const formatter = new Intl.NumberFormat(lng, {\n                    ...opt,\n                    style: 'currency'\n                });\n                return (val)=>formatter.format(val);\n            }),\n            datetime: $673ff3dfc4a496de$var$createCachedFormatter((lng, opt)=>{\n                const formatter = new Intl.DateTimeFormat(lng, {\n                    ...opt\n                });\n                return (val)=>formatter.format(val);\n            }),\n            relativetime: $673ff3dfc4a496de$var$createCachedFormatter((lng, opt)=>{\n                const formatter = new Intl.RelativeTimeFormat(lng, {\n                    ...opt\n                });\n                return (val)=>formatter.format(val, opt.range || 'day');\n            }),\n            list: $673ff3dfc4a496de$var$createCachedFormatter((lng, opt)=>{\n                const formatter = new Intl.ListFormat(lng, {\n                    ...opt\n                });\n                return (val)=>formatter.format(val);\n            })\n        };\n        this.init(options);\n    }\n    init(services) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            interpolation: {}\n        };\n        this.formatSeparator = options.interpolation.formatSeparator || ',';\n    }\n    add(name, fc) {\n        this.formats[name.toLowerCase().trim()] = fc;\n    }\n    addCached(name, fc) {\n        this.formats[name.toLowerCase().trim()] = $673ff3dfc4a496de$var$createCachedFormatter(fc);\n    }\n    format(value, format, lng) {\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        const formats = format.split(this.formatSeparator);\n        if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find((f)=>f.indexOf(')') > -1)) {\n            const lastIndex = formats.findIndex((f)=>f.indexOf(')') > -1);\n            formats[0] = [\n                formats[0],\n                ...formats.splice(1, lastIndex)\n            ].join(this.formatSeparator);\n        }\n        const result = formats.reduce((mem, f)=>{\n            const { formatName: formatName, formatOptions: formatOptions } = $673ff3dfc4a496de$var$parseFormatStr(f);\n            if (this.formats[formatName]) {\n                let formatted = mem;\n                try {\n                    const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n                    const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n                    formatted = this.formats[formatName](mem, l, {\n                        ...formatOptions,\n                        ...options,\n                        ...valOptions\n                    });\n                } catch (error) {\n                    this.logger.warn(error);\n                }\n                return formatted;\n            } else this.logger.warn(`there was no format function for ${formatName}`);\n            return mem;\n        }, value);\n        return result;\n    }\n}\nconst $673ff3dfc4a496de$var$removePending = (q, name)=>{\n    if (q.pending[name] !== undefined) {\n        delete q.pending[name];\n        q.pendingCount--;\n    }\n};\nclass $673ff3dfc4a496de$var$Connector extends $673ff3dfc4a496de$var$EventEmitter {\n    constructor(backend, store, services){\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        super();\n        this.backend = backend;\n        this.store = store;\n        this.services = services;\n        this.languageUtils = services.languageUtils;\n        this.options = options;\n        this.logger = $673ff3dfc4a496de$var$baseLogger.create('backendConnector');\n        this.waitingReads = [];\n        this.maxParallelReads = options.maxParallelReads || 10;\n        this.readingCalls = 0;\n        this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n        this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n        this.state = {};\n        this.queue = [];\n        this.backend?.init?.(services, options.backend, options);\n    }\n    queueLoad(languages, namespaces, options, callback) {\n        const toLoad = {};\n        const pending = {};\n        const toLoadLanguages = {};\n        const toLoadNamespaces = {};\n        languages.forEach((lng)=>{\n            let hasAllNamespaces = true;\n            namespaces.forEach((ns)=>{\n                const name = `${lng}|${ns}`;\n                if (!options.reload && this.store.hasResourceBundle(lng, ns)) this.state[name] = 2;\n                else if (this.state[name] < 0) ;\n                else if (this.state[name] === 1) {\n                    if (pending[name] === undefined) pending[name] = true;\n                } else {\n                    this.state[name] = 1;\n                    hasAllNamespaces = false;\n                    if (pending[name] === undefined) pending[name] = true;\n                    if (toLoad[name] === undefined) toLoad[name] = true;\n                    if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n                }\n            });\n            if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n        });\n        if (Object.keys(toLoad).length || Object.keys(pending).length) this.queue.push({\n            pending: pending,\n            pendingCount: Object.keys(pending).length,\n            loaded: {},\n            errors: [],\n            callback: callback\n        });\n        return {\n            toLoad: Object.keys(toLoad),\n            pending: Object.keys(pending),\n            toLoadLanguages: Object.keys(toLoadLanguages),\n            toLoadNamespaces: Object.keys(toLoadNamespaces)\n        };\n    }\n    loaded(name, err, data) {\n        const s = name.split('|');\n        const lng = s[0];\n        const ns = s[1];\n        if (err) this.emit('failedLoading', lng, ns, err);\n        if (!err && data) this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n            skipCopy: true\n        });\n        this.state[name] = err ? -1 : 2;\n        if (err && data) this.state[name] = 0;\n        const loaded = {};\n        this.queue.forEach((q)=>{\n            $673ff3dfc4a496de$var$pushPath(q.loaded, [\n                lng\n            ], ns);\n            $673ff3dfc4a496de$var$removePending(q, name);\n            if (err) q.errors.push(err);\n            if (q.pendingCount === 0 && !q.done) {\n                Object.keys(q.loaded).forEach((l)=>{\n                    if (!loaded[l]) loaded[l] = {};\n                    const loadedKeys = q.loaded[l];\n                    if (loadedKeys.length) loadedKeys.forEach((n)=>{\n                        if (loaded[l][n] === undefined) loaded[l][n] = true;\n                    });\n                });\n                q.done = true;\n                if (q.errors.length) q.callback(q.errors);\n                else q.callback();\n            }\n        });\n        this.emit('loaded', loaded);\n        this.queue = this.queue.filter((q)=>!q.done);\n    }\n    read(lng, ns, fcName) {\n        let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n        let callback = arguments.length > 5 ? arguments[5] : undefined;\n        if (!lng.length) return callback(null, {});\n        if (this.readingCalls >= this.maxParallelReads) {\n            this.waitingReads.push({\n                lng: lng,\n                ns: ns,\n                fcName: fcName,\n                tried: tried,\n                wait: wait,\n                callback: callback\n            });\n            return;\n        }\n        this.readingCalls++;\n        const resolver = (err, data)=>{\n            this.readingCalls--;\n            if (this.waitingReads.length > 0) {\n                const next = this.waitingReads.shift();\n                this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n            }\n            if (err && data && tried < this.maxRetries) {\n                setTimeout(()=>{\n                    this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n                }, wait);\n                return;\n            }\n            callback(err, data);\n        };\n        const fc = this.backend[fcName].bind(this.backend);\n        if (fc.length === 2) {\n            try {\n                const r = fc(lng, ns);\n                if (r && typeof r.then === 'function') r.then((data)=>resolver(null, data)).catch(resolver);\n                else resolver(null, r);\n            } catch (err) {\n                resolver(err);\n            }\n            return;\n        }\n        return fc(lng, ns, resolver);\n    }\n    prepareLoading(languages, namespaces) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        let callback = arguments.length > 3 ? arguments[3] : undefined;\n        if (!this.backend) {\n            this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n            return callback && callback();\n        }\n        if ($673ff3dfc4a496de$var$isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n        if ($673ff3dfc4a496de$var$isString(namespaces)) namespaces = [\n            namespaces\n        ];\n        const toLoad = this.queueLoad(languages, namespaces, options, callback);\n        if (!toLoad.toLoad.length) {\n            if (!toLoad.pending.length) callback();\n            return null;\n        }\n        toLoad.toLoad.forEach((name)=>{\n            this.loadOne(name);\n        });\n    }\n    load(languages, namespaces, callback) {\n        this.prepareLoading(languages, namespaces, {}, callback);\n    }\n    reload(languages, namespaces, callback) {\n        this.prepareLoading(languages, namespaces, {\n            reload: true\n        }, callback);\n    }\n    loadOne(name) {\n        let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        const s = name.split('|');\n        const lng = s[0];\n        const ns = s[1];\n        this.read(lng, ns, 'read', undefined, undefined, (err, data)=>{\n            if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n            if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n            this.loaded(name, err, data);\n        });\n    }\n    saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n        let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n        let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : ()=>{};\n        if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n            this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n            return;\n        }\n        if (key === undefined || key === null || key === '') return;\n        if (this.backend?.create) {\n            const opts = {\n                ...options,\n                isUpdate: isUpdate\n            };\n            const fc = this.backend.create.bind(this.backend);\n            if (fc.length < 6) try {\n                let r;\n                if (fc.length === 5) r = fc(languages, namespace, key, fallbackValue, opts);\n                else r = fc(languages, namespace, key, fallbackValue);\n                if (r && typeof r.then === 'function') r.then((data)=>clb(null, data)).catch(clb);\n                else clb(null, r);\n            } catch (err) {\n                clb(err);\n            }\n            else fc(languages, namespace, key, fallbackValue, clb, opts);\n        }\n        if (!languages || !languages[0]) return;\n        this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n}\nconst $673ff3dfc4a496de$var$get = ()=>({\n        debug: false,\n        initAsync: true,\n        ns: [\n            'translation'\n        ],\n        defaultNS: [\n            'translation'\n        ],\n        fallbackLng: [\n            'dev'\n        ],\n        fallbackNS: false,\n        supportedLngs: false,\n        nonExplicitSupportedLngs: false,\n        load: 'all',\n        preload: false,\n        simplifyPluralSuffix: true,\n        keySeparator: '.',\n        nsSeparator: ':',\n        pluralSeparator: '_',\n        contextSeparator: '_',\n        partialBundledLanguages: false,\n        saveMissing: false,\n        updateMissing: false,\n        saveMissingTo: 'fallback',\n        saveMissingPlurals: true,\n        missingKeyHandler: false,\n        missingInterpolationHandler: false,\n        postProcess: false,\n        postProcessPassResolved: false,\n        returnNull: false,\n        returnEmptyString: true,\n        returnObjects: false,\n        joinArrays: false,\n        returnedObjectHandler: false,\n        parseMissingKeyHandler: false,\n        appendNamespaceToMissingKey: false,\n        appendNamespaceToCIMode: false,\n        overloadTranslationOptionHandler: (args)=>{\n            let ret = {};\n            if (typeof args[1] === 'object') ret = args[1];\n            if ($673ff3dfc4a496de$var$isString(args[1])) ret.defaultValue = args[1];\n            if ($673ff3dfc4a496de$var$isString(args[2])) ret.tDescription = args[2];\n            if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n                const options = args[3] || args[2];\n                Object.keys(options).forEach((key)=>{\n                    ret[key] = options[key];\n                });\n            }\n            return ret;\n        },\n        interpolation: {\n            escapeValue: true,\n            format: (value)=>value,\n            prefix: '{{',\n            suffix: '}}',\n            formatSeparator: ',',\n            unescapePrefix: '-',\n            nestingPrefix: '$t(',\n            nestingSuffix: ')',\n            nestingOptionsSeparator: ',',\n            maxReplaces: 1000,\n            skipOnVariables: true\n        }\n    });\nconst $673ff3dfc4a496de$var$transformOptions = (options)=>{\n    if ($673ff3dfc4a496de$var$isString(options.ns)) options.ns = [\n        options.ns\n    ];\n    if ($673ff3dfc4a496de$var$isString(options.fallbackLng)) options.fallbackLng = [\n        options.fallbackLng\n    ];\n    if ($673ff3dfc4a496de$var$isString(options.fallbackNS)) options.fallbackNS = [\n        options.fallbackNS\n    ];\n    if (options.supportedLngs?.indexOf?.('cimode') < 0) options.supportedLngs = options.supportedLngs.concat([\n        'cimode'\n    ]);\n    if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n    return options;\n};\nconst $673ff3dfc4a496de$var$noop = ()=>{};\nconst $673ff3dfc4a496de$var$bindMemberFunctions = (inst)=>{\n    const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n    mems.forEach((mem)=>{\n        if (typeof inst[mem] === 'function') inst[mem] = inst[mem].bind(inst);\n    });\n};\nclass $673ff3dfc4a496de$var$I18n extends $673ff3dfc4a496de$var$EventEmitter {\n    constructor(){\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let callback = arguments.length > 1 ? arguments[1] : undefined;\n        super();\n        this.options = $673ff3dfc4a496de$var$transformOptions(options);\n        this.services = {};\n        this.logger = $673ff3dfc4a496de$var$baseLogger;\n        this.modules = {\n            external: []\n        };\n        $673ff3dfc4a496de$var$bindMemberFunctions(this);\n        if (callback && !this.isInitialized && !options.isClone) {\n            if (!this.options.initAsync) {\n                this.init(options, callback);\n                return this;\n            }\n            setTimeout(()=>{\n                this.init(options, callback);\n            }, 0);\n        }\n    }\n    init() {\n        var _this = this;\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let callback = arguments.length > 1 ? arguments[1] : undefined;\n        this.isInitializing = true;\n        if (typeof options === 'function') {\n            callback = options;\n            options = {};\n        }\n        if (options.defaultNS == null && options.ns) {\n            if ($673ff3dfc4a496de$var$isString(options.ns)) options.defaultNS = options.ns;\n            else if (options.ns.indexOf('translation') < 0) options.defaultNS = options.ns[0];\n        }\n        const defOpts = $673ff3dfc4a496de$var$get();\n        this.options = {\n            ...defOpts,\n            ...this.options,\n            ...$673ff3dfc4a496de$var$transformOptions(options)\n        };\n        this.options.interpolation = {\n            ...defOpts.interpolation,\n            ...this.options.interpolation\n        };\n        if (options.keySeparator !== undefined) this.options.userDefinedKeySeparator = options.keySeparator;\n        if (options.nsSeparator !== undefined) this.options.userDefinedNsSeparator = options.nsSeparator;\n        const createClassOnDemand = (ClassOrObject)=>{\n            if (!ClassOrObject) return null;\n            if (typeof ClassOrObject === 'function') return new ClassOrObject();\n            return ClassOrObject;\n        };\n        if (!this.options.isClone) {\n            if (this.modules.logger) $673ff3dfc4a496de$var$baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n            else $673ff3dfc4a496de$var$baseLogger.init(null, this.options);\n            let formatter;\n            if (this.modules.formatter) formatter = this.modules.formatter;\n            else formatter = $673ff3dfc4a496de$var$Formatter;\n            const lu = new $673ff3dfc4a496de$var$LanguageUtil(this.options);\n            this.store = new $673ff3dfc4a496de$var$ResourceStore(this.options.resources, this.options);\n            const s = this.services;\n            s.logger = $673ff3dfc4a496de$var$baseLogger;\n            s.resourceStore = this.store;\n            s.languageUtils = lu;\n            s.pluralResolver = new $673ff3dfc4a496de$var$PluralResolver(lu, {\n                prepend: this.options.pluralSeparator,\n                simplifyPluralSuffix: this.options.simplifyPluralSuffix\n            });\n            if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n                s.formatter = createClassOnDemand(formatter);\n                s.formatter.init(s, this.options);\n                this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n            }\n            s.interpolator = new $673ff3dfc4a496de$var$Interpolator(this.options);\n            s.utils = {\n                hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n            };\n            s.backendConnector = new $673ff3dfc4a496de$var$Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n            s.backendConnector.on('*', function(event) {\n                for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];\n                _this.emit(event, ...args);\n            });\n            if (this.modules.languageDetector) {\n                s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n                if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n            }\n            if (this.modules.i18nFormat) {\n                s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n                if (s.i18nFormat.init) s.i18nFormat.init(this);\n            }\n            this.translator = new $673ff3dfc4a496de$var$Translator(this.services, this.options);\n            this.translator.on('*', function(event) {\n                for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];\n                _this.emit(event, ...args);\n            });\n            this.modules.external.forEach((m)=>{\n                if (m.init) m.init(this);\n            });\n        }\n        this.format = this.options.interpolation.format;\n        if (!callback) callback = $673ff3dfc4a496de$var$noop;\n        if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n            const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n            if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n        }\n        if (!this.services.languageDetector && !this.options.lng) this.logger.warn('init: no languageDetector is used and no lng is defined');\n        const storeApi = [\n            'getResource',\n            'hasResourceBundle',\n            'getResourceBundle',\n            'getDataByLanguage'\n        ];\n        storeApi.forEach((fcName)=>{\n            this[fcName] = function() {\n                return _this.store[fcName](...arguments);\n            };\n        });\n        const storeApiChained = [\n            'addResource',\n            'addResources',\n            'addResourceBundle',\n            'removeResourceBundle'\n        ];\n        storeApiChained.forEach((fcName)=>{\n            this[fcName] = function() {\n                _this.store[fcName](...arguments);\n                return _this;\n            };\n        });\n        const deferred = $673ff3dfc4a496de$var$defer();\n        const load = ()=>{\n            const finish = (err, t)=>{\n                this.isInitializing = false;\n                if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n                this.isInitialized = true;\n                if (!this.options.isClone) this.logger.log('initialized', this.options);\n                this.emit('initialized', this.options);\n                deferred.resolve(t);\n                callback(err, t);\n            };\n            if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n            this.changeLanguage(this.options.lng, finish);\n        };\n        if (this.options.resources || !this.options.initAsync) load();\n        else setTimeout(load, 0);\n        return deferred;\n    }\n    loadResources(language) {\n        let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $673ff3dfc4a496de$var$noop;\n        let usedCallback = callback;\n        const usedLng = $673ff3dfc4a496de$var$isString(language) ? language : this.language;\n        if (typeof language === 'function') usedCallback = language;\n        if (!this.options.resources || this.options.partialBundledLanguages) {\n            if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n            const toLoad = [];\n            const append = (lng)=>{\n                if (!lng) return;\n                if (lng === 'cimode') return;\n                const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n                lngs.forEach((l)=>{\n                    if (l === 'cimode') return;\n                    if (toLoad.indexOf(l) < 0) toLoad.push(l);\n                });\n            };\n            if (!usedLng) {\n                const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n                fallbacks.forEach((l)=>append(l));\n            } else append(usedLng);\n            this.options.preload?.forEach?.((l)=>append(l));\n            this.services.backendConnector.load(toLoad, this.options.ns, (e)=>{\n                if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n                usedCallback(e);\n            });\n        } else usedCallback(null);\n    }\n    reloadResources(lngs, ns, callback) {\n        const deferred = $673ff3dfc4a496de$var$defer();\n        if (typeof lngs === 'function') {\n            callback = lngs;\n            lngs = undefined;\n        }\n        if (typeof ns === 'function') {\n            callback = ns;\n            ns = undefined;\n        }\n        if (!lngs) lngs = this.languages;\n        if (!ns) ns = this.options.ns;\n        if (!callback) callback = $673ff3dfc4a496de$var$noop;\n        this.services.backendConnector.reload(lngs, ns, (err)=>{\n            deferred.resolve();\n            callback(err);\n        });\n        return deferred;\n    }\n    use(module) {\n        if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n        if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n        if (module.type === 'backend') this.modules.backend = module;\n        if (module.type === 'logger' || module.log && module.warn && module.error) this.modules.logger = module;\n        if (module.type === 'languageDetector') this.modules.languageDetector = module;\n        if (module.type === 'i18nFormat') this.modules.i18nFormat = module;\n        if (module.type === 'postProcessor') $673ff3dfc4a496de$var$postProcessor.addPostProcessor(module);\n        if (module.type === 'formatter') this.modules.formatter = module;\n        if (module.type === '3rdParty') this.modules.external.push(module);\n        return this;\n    }\n    setResolvedLanguage(l) {\n        if (!l || !this.languages) return;\n        if ([\n            'cimode',\n            'dev'\n        ].indexOf(l) > -1) return;\n        for(let li = 0; li < this.languages.length; li++){\n            const lngInLngs = this.languages[li];\n            if ([\n                'cimode',\n                'dev'\n            ].indexOf(lngInLngs) > -1) continue;\n            if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n                this.resolvedLanguage = lngInLngs;\n                break;\n            }\n        }\n    }\n    changeLanguage(lng, callback) {\n        var _this2 = this;\n        this.isLanguageChangingTo = lng;\n        const deferred = $673ff3dfc4a496de$var$defer();\n        this.emit('languageChanging', lng);\n        const setLngProps = (l)=>{\n            this.language = l;\n            this.languages = this.services.languageUtils.toResolveHierarchy(l);\n            this.resolvedLanguage = undefined;\n            this.setResolvedLanguage(l);\n        };\n        const done = (err, l)=>{\n            if (l) {\n                setLngProps(l);\n                this.translator.changeLanguage(l);\n                this.isLanguageChangingTo = undefined;\n                this.emit('languageChanged', l);\n                this.logger.log('languageChanged', l);\n            } else this.isLanguageChangingTo = undefined;\n            deferred.resolve(function() {\n                return _this2.t(...arguments);\n            });\n            if (callback) callback(err, function() {\n                return _this2.t(...arguments);\n            });\n        };\n        const setLng = (lngs)=>{\n            if (!lng && !lngs && this.services.languageDetector) lngs = [];\n            const l = $673ff3dfc4a496de$var$isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n            if (l) {\n                if (!this.language) setLngProps(l);\n                if (!this.translator.language) this.translator.changeLanguage(l);\n                this.services.languageDetector?.cacheUserLanguage?.(l);\n            }\n            this.loadResources(l, (err)=>{\n                done(err, l);\n            });\n        };\n        if (!lng && this.services.languageDetector && !this.services.languageDetector.async) setLng(this.services.languageDetector.detect());\n        else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n            if (this.services.languageDetector.detect.length === 0) this.services.languageDetector.detect().then(setLng);\n            else this.services.languageDetector.detect(setLng);\n        } else setLng(lng);\n        return deferred;\n    }\n    getFixedT(lng, ns, keyPrefix) {\n        var _this3 = this;\n        const fixedT = function(key, opts) {\n            let options;\n            if (typeof opts !== 'object') {\n                for(var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++)rest[_key3 - 2] = arguments[_key3];\n                options = _this3.options.overloadTranslationOptionHandler([\n                    key,\n                    opts\n                ].concat(rest));\n            } else options = {\n                ...opts\n            };\n            options.lng = options.lng || fixedT.lng;\n            options.lngs = options.lngs || fixedT.lngs;\n            options.ns = options.ns || fixedT.ns;\n            if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n            const keySeparator = _this3.options.keySeparator || '.';\n            let resultKey;\n            if (options.keyPrefix && Array.isArray(key)) resultKey = key.map((k)=>`${options.keyPrefix}${keySeparator}${k}`);\n            else resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n            return _this3.t(resultKey, options);\n        };\n        if ($673ff3dfc4a496de$var$isString(lng)) fixedT.lng = lng;\n        else fixedT.lngs = lng;\n        fixedT.ns = ns;\n        fixedT.keyPrefix = keyPrefix;\n        return fixedT;\n    }\n    t() {\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)args[_key4] = arguments[_key4];\n        return this.translator?.translate(...args);\n    }\n    exists() {\n        for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++)args[_key5] = arguments[_key5];\n        return this.translator?.exists(...args);\n    }\n    setDefaultNamespace(ns) {\n        this.options.defaultNS = ns;\n    }\n    hasLoadedNamespace(ns) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        if (!this.isInitialized) {\n            this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n            return false;\n        }\n        if (!this.languages || !this.languages.length) {\n            this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n            return false;\n        }\n        const lng = options.lng || this.resolvedLanguage || this.languages[0];\n        const fallbackLng = this.options ? this.options.fallbackLng : false;\n        const lastLng = this.languages[this.languages.length - 1];\n        if (lng.toLowerCase() === 'cimode') return true;\n        const loadNotPending = (l, n)=>{\n            const loadState = this.services.backendConnector.state[`${l}|${n}`];\n            return loadState === -1 || loadState === 0 || loadState === 2;\n        };\n        if (options.precheck) {\n            const preResult = options.precheck(this, loadNotPending);\n            if (preResult !== undefined) return preResult;\n        }\n        if (this.hasResourceBundle(lng, ns)) return true;\n        if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n        if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n        return false;\n    }\n    loadNamespaces(ns, callback) {\n        const deferred = $673ff3dfc4a496de$var$defer();\n        if (!this.options.ns) {\n            if (callback) callback();\n            return Promise.resolve();\n        }\n        if ($673ff3dfc4a496de$var$isString(ns)) ns = [\n            ns\n        ];\n        ns.forEach((n)=>{\n            if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n        });\n        this.loadResources((err)=>{\n            deferred.resolve();\n            if (callback) callback(err);\n        });\n        return deferred;\n    }\n    loadLanguages(lngs, callback) {\n        const deferred = $673ff3dfc4a496de$var$defer();\n        if ($673ff3dfc4a496de$var$isString(lngs)) lngs = [\n            lngs\n        ];\n        const preloaded = this.options.preload || [];\n        const newLngs = lngs.filter((lng)=>preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n        if (!newLngs.length) {\n            if (callback) callback();\n            return Promise.resolve();\n        }\n        this.options.preload = preloaded.concat(newLngs);\n        this.loadResources((err)=>{\n            deferred.resolve();\n            if (callback) callback(err);\n        });\n        return deferred;\n    }\n    dir(lng) {\n        if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n        if (!lng) return 'rtl';\n        const rtlLngs = [\n            'ar',\n            'shu',\n            'sqr',\n            'ssh',\n            'xaa',\n            'yhd',\n            'yud',\n            'aao',\n            'abh',\n            'abv',\n            'acm',\n            'acq',\n            'acw',\n            'acx',\n            'acy',\n            'adf',\n            'ads',\n            'aeb',\n            'aec',\n            'afb',\n            'ajp',\n            'apc',\n            'apd',\n            'arb',\n            'arq',\n            'ars',\n            'ary',\n            'arz',\n            'auz',\n            'avl',\n            'ayh',\n            'ayl',\n            'ayn',\n            'ayp',\n            'bbz',\n            'pga',\n            'he',\n            'iw',\n            'ps',\n            'pbt',\n            'pbu',\n            'pst',\n            'prp',\n            'prd',\n            'ug',\n            'ur',\n            'ydd',\n            'yds',\n            'yih',\n            'ji',\n            'yi',\n            'hbo',\n            'men',\n            'xmn',\n            'fa',\n            'jpr',\n            'peo',\n            'pes',\n            'prs',\n            'dv',\n            'sam',\n            'ckb'\n        ];\n        const languageUtils = this.services?.languageUtils || new $673ff3dfc4a496de$var$LanguageUtil($673ff3dfc4a496de$var$get());\n        return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n    }\n    static createInstance() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let callback = arguments.length > 1 ? arguments[1] : undefined;\n        return new $673ff3dfc4a496de$var$I18n(options, callback);\n    }\n    cloneInstance() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $673ff3dfc4a496de$var$noop;\n        const forkResourceStore = options.forkResourceStore;\n        if (forkResourceStore) delete options.forkResourceStore;\n        const mergedOptions = {\n            ...this.options,\n            ...options,\n            isClone: true\n        };\n        const clone = new $673ff3dfc4a496de$var$I18n(mergedOptions);\n        if (options.debug !== undefined || options.prefix !== undefined) clone.logger = clone.logger.clone(options);\n        const membersToCopy = [\n            'store',\n            'services',\n            'language'\n        ];\n        membersToCopy.forEach((m)=>{\n            clone[m] = this[m];\n        });\n        clone.services = {\n            ...this.services\n        };\n        clone.services.utils = {\n            hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n        };\n        if (forkResourceStore) {\n            const clonedData = Object.keys(this.store.data).reduce((prev, l)=>{\n                prev[l] = {\n                    ...this.store.data[l]\n                };\n                return Object.keys(prev[l]).reduce((acc, n)=>{\n                    acc[n] = {\n                        ...prev[l][n]\n                    };\n                    return acc;\n                }, {});\n            }, {});\n            clone.store = new $673ff3dfc4a496de$var$ResourceStore(clonedData, mergedOptions);\n            clone.services.resourceStore = clone.store;\n        }\n        clone.translator = new $673ff3dfc4a496de$var$Translator(clone.services, mergedOptions);\n        clone.translator.on('*', function(event) {\n            for(var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++)args[_key6 - 1] = arguments[_key6];\n            clone.emit(event, ...args);\n        });\n        clone.init(mergedOptions, callback);\n        clone.translator.options = mergedOptions;\n        clone.translator.backendConnector.services.utils = {\n            hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n        };\n        return clone;\n    }\n    toJSON() {\n        return {\n            options: this.options,\n            store: this.store,\n            language: this.language,\n            languages: this.languages,\n            resolvedLanguage: this.resolvedLanguage\n        };\n    }\n}\nconst $673ff3dfc4a496de$export$2e2bcd8739ae039 = $673ff3dfc4a496de$var$I18n.createInstance();\n$673ff3dfc4a496de$export$2e2bcd8739ae039.createInstance = $673ff3dfc4a496de$var$I18n.createInstance;\nconst $673ff3dfc4a496de$export$99152e8d49ca4e7d = $673ff3dfc4a496de$export$2e2bcd8739ae039.createInstance;\nconst $673ff3dfc4a496de$export$147ec2801e896265 = $673ff3dfc4a496de$export$2e2bcd8739ae039.dir;\nconst $673ff3dfc4a496de$export$2cd8252107eb640b = $673ff3dfc4a496de$export$2e2bcd8739ae039.init;\nconst $673ff3dfc4a496de$export$d3d08d944062d7e = $673ff3dfc4a496de$export$2e2bcd8739ae039.loadResources;\nconst $673ff3dfc4a496de$export$a5d9bf5d83fcab09 = $673ff3dfc4a496de$export$2e2bcd8739ae039.reloadResources;\nconst $673ff3dfc4a496de$export$1f96ae73734a86cc = $673ff3dfc4a496de$export$2e2bcd8739ae039.use;\nconst $673ff3dfc4a496de$export$61465194746e7fd2 = $673ff3dfc4a496de$export$2e2bcd8739ae039.changeLanguage;\nconst $673ff3dfc4a496de$export$f90d180fc7da3b3b = $673ff3dfc4a496de$export$2e2bcd8739ae039.getFixedT;\nconst $673ff3dfc4a496de$export$625550452a3fa3ec = $673ff3dfc4a496de$export$2e2bcd8739ae039.t;\nconst $673ff3dfc4a496de$export$f7e9f41ea797a17 = $673ff3dfc4a496de$export$2e2bcd8739ae039.exists;\nconst $673ff3dfc4a496de$export$2b4b218e406d2d00 = $673ff3dfc4a496de$export$2e2bcd8739ae039.setDefaultNamespace;\nconst $673ff3dfc4a496de$export$93d9ee97c1ad3f31 = $673ff3dfc4a496de$export$2e2bcd8739ae039.hasLoadedNamespace;\nconst $673ff3dfc4a496de$export$83be934b53fff43b = $673ff3dfc4a496de$export$2e2bcd8739ae039.loadNamespaces;\nconst $673ff3dfc4a496de$export$8cd7e7a54fa865bc = $673ff3dfc4a496de$export$2e2bcd8739ae039.loadLanguages;\n\n});\n\n\n\nparcelRequire(\"euqVc\");\n\n//# sourceMappingURL=index.5ba705ae.js.map\n","import i18next from 'i18next';\n\n// Update the UI text and refresh the calendar\nexport function updateUI() {\n  console.log(`Updating UI for language: ${i18next.language}`);\n  document.getElementById('title')!.textContent = i18next.t('title');\n  document.getElementById('instructions')!.textContent = i18next.t('instructions');\n  updateSchedule();\n}\n\n// Set up the initial calendar (using English internal keys)\nexport function setupCalendar() {\n  console.log('Setting up calendar...');\n  // Use the English month name (from the constant array) for internal logic\n  const currentMonthIndex = new Date().getMonth();\n  const currentMonth = months[currentMonthIndex];\n  createCalendarView(currentMonth);\n}\n\n// Retrieve translated arrays from i18next\nfunction getTranslatedDaysOfWeek(): string[] {\n  return i18next.t('daysOfWeek', { returnObjects: true }) as string[];\n}\nfunction getTranslatedTimes(): string[] {\n  return i18next.t('times', { returnObjects: true }) as string[];\n}\n\n// For display purposes you might also translate the month names:\n// (Assumes your locales include a \"months\" array.)\nfunction getTranslatedMonths(): string[] {\n  return i18next.t('months', { returnObjects: true }) as string[];\n}\n\n// Use a fixed internal array of months (keys must match monthDays keys)\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst monthDays: Record<string, number> = {\n  January: 31, February: 28, March: 31, April: 30, May: 31, June: 30,\n  July: 31, August: 31, September: 30, October: 31, November: 30, December: 31\n};\n\n// Keeps track of booked slots\nconst bookedSlots: Record<string, Record<number, string[]>> = {};\n\n// Create the month dropdown for selecting the month.\nconst monthSelect = document.createElement('select');\nmonthSelect.addEventListener('change', updateSchedule);\nmonths.forEach((month, index) => {\n  const option = document.createElement('option');\n  option.value = index.toString();\n  // You can optionally use the translated month names here:\n  // const translatedMonths = getTranslatedMonths();\n  // option.textContent = translatedMonths[index];\n  option.textContent = month;\n  monthSelect.appendChild(option);\n});\ndocument.getElementById('schedule-container')?.appendChild(monthSelect);\n\n// Update the calendar when language or month selection changes.\nfunction updateSchedule() {\n  console.log('Updating schedule...');\n\n  // Remove any existing calendar(s)\n  const existingCalendars = document.querySelectorAll('.calendar-container');\n  existingCalendars.forEach(calendar => calendar.remove());\n\n  // Use the fixed English month (internal key) to lookup days\n  let selectedMonth: string;\n  if (monthSelect.value !== '') {\n    const monthIndex = parseInt(monthSelect.value);\n    selectedMonth = months[monthIndex];\n  } else {\n    // Fallback: use current month based on English keys\n    const currentMonthIndex = new Date().getMonth();\n    selectedMonth = months[currentMonthIndex];\n  }\n\n  // (Optional) Log the current selected language:\n  console.log(\"Selected language:\", getSelectedLanguage());\n\n  // Recreate the calendar using the internal English month name\n  createCalendarView(selectedMonth);\n}\n\n// Create the calendar view based on the internal month name\nfunction createCalendarView(month: string) {\n  const scheduleContainer = document.getElementById('schedule-container') as HTMLElement;\n  const calendarContainer = document.createElement('div');\n  calendarContainer.classList.add('calendar-container');\n\n  // Create table for the calendar\n  const table = document.createElement('table');\n  const headerRow = document.createElement('tr');\n  // Use translated days of the week for the header\n  getTranslatedDaysOfWeek().forEach(day => {\n    const th = document.createElement('th');\n    th.textContent = day;\n    headerRow.appendChild(th);\n  });\n  table.appendChild(headerRow);\n\n  let dayOfMonth = 1;\n  for (let i = 0; i < 6; i++) {\n    const row = document.createElement('tr');\n    for (let j = 0; j < 7; j++) {\n      const cell = document.createElement('td');\n      if (dayOfMonth <= monthDays[month]) {\n        const button = createDayButton(dayOfMonth, month);\n        cell.appendChild(button);\n        dayOfMonth++;\n      }\n      row.appendChild(cell);\n    }\n    table.appendChild(row);\n    if (dayOfMonth > monthDays[month]) break;\n  }\n  calendarContainer.appendChild(table);\n  scheduleContainer.appendChild(calendarContainer);\n}\n\n// Create a button for each day that shows the day number and triggers the time slots display\nfunction createDayButton(day: number, month: string): HTMLButtonElement {\n  const button = document.createElement('button');\n  button.textContent = `${day}`;\n  button.addEventListener('click', () => displayTimeSlots(day, month));\n  return button;\n}\n\n// Display the available time slots for a given day and month\nfunction displayTimeSlots(day: number, month: string) {\n  let timeSlotsContainer = document.getElementById('time-slots-container');\n  if (!timeSlotsContainer) {\n    timeSlotsContainer = document.createElement('div');\n    timeSlotsContainer.id = 'time-slots-container';\n    document.body.appendChild(timeSlotsContainer);\n  }\n  timeSlotsContainer.innerHTML = '';\n\n  const availableSlots = bookedSlots[month]?.[day] || [];\n  const availableTimes = getTranslatedTimes().filter(time => !availableSlots.includes(time));\n\n  const slotTable = document.createElement('table');\n  availableTimes.forEach(time => {\n    const row = document.createElement('tr');\n    const timeCell = document.createElement('td');\n    timeCell.textContent = time;\n    row.appendChild(timeCell);\n\n    const bookButton = document.createElement('button');\n    bookButton.textContent = 'Book';\n    bookButton.addEventListener('click', () => handleBooking(day, month, time, bookButton));\n    row.appendChild(bookButton);\n    slotTable.appendChild(row);\n  });\n  timeSlotsContainer.appendChild(slotTable);\n}\n\n// Handle a booking by updating internal state and changing the button appearance\nfunction handleBooking(day: number, month: string, time: string, button: HTMLButtonElement) {\n  if (!bookedSlots[month]) bookedSlots[month] = {};\n  if (!bookedSlots[month][day]) bookedSlots[month][day] = [];\n  bookedSlots[month][day].push(time);\n\n  button.textContent = 'Booked';\n  button.disabled = true;\n  button.style.backgroundColor = 'red';\n}\n\n// This function now uses the correct dropdown ID: \"languageSwitch\"\nfunction getSelectedLanguage(): string {\n  const languageDropdown = document.getElementById(\"languageSwitch\") as HTMLSelectElement;\n  return languageDropdown?.value || \"en\";\n}\n\n// Initial setup: create the calendar using the default language and current month.\nsetupCalendar();\n","const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = function (obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key == null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = options.count !== undefined && !isString(options.count);\n    const hasDefaultValue = Translator.hasDefaultValue(options);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n    const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n    const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...options,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...options,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && !isString(options.replace) ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey?.[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && !isString(options.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;\n      const needsContextHandling = options.context !== undefined && (isString(options.context) || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = function (data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  }\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = isString(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.translator?.translate(...args);\n  }\n  exists() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        return Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, {});\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$f43313d21d3fd8e2$export$d1c957a54f7124bc","$f43313d21d3fd8e2$export$c6f7f92c8cfb6140","$8RAYl","console","log","default","language","document","getElementById","textContent","t","$f43313d21d3fd8e2$var$updateSchedule","$f43313d21d3fd8e2$var$createCalendarView","$f43313d21d3fd8e2$var$months","Date","getMonth","$f43313d21d3fd8e2$var$monthDays","January","February","March","April","May","June","July","August","September","October","November","December","$f43313d21d3fd8e2$var$bookedSlots","$f43313d21d3fd8e2$var$monthSelect","createElement","selectedMonth","existingCalendars","querySelectorAll","forEach","calendar","remove","value","parseInt","$f43313d21d3fd8e2$var$getSelectedLanguage","languageDropdown","month","scheduleContainer","calendarContainer","classList","add","table","headerRow","$f43313d21d3fd8e2$var$getTranslatedDaysOfWeek","returnObjects","day","th","appendChild","dayOfMonth","i","row","j","cell","button","$f43313d21d3fd8e2$var$createDayButton","addEventListener","$f43313d21d3fd8e2$var$displayTimeSlots","timeSlotsContainer","body","innerHTML","availableSlots","availableTimes","$f43313d21d3fd8e2$var$getTranslatedTimes","filter","time","includes","slotTable","timeCell","bookButton","push","disabled","style","backgroundColor","index","option","toString","$673ff3dfc4a496de$export$2e2bcd8739ae039","$673ff3dfc4a496de$var$isString","obj","$673ff3dfc4a496de$var$defer","res","rej","promise","Promise","resolve","reject","$673ff3dfc4a496de$var$makeString","object","$673ff3dfc4a496de$var$copy","a","m","$673ff3dfc4a496de$var$lastOfPathSeparatorRegExp","$673ff3dfc4a496de$var$cleanKey","key","indexOf","replace","$673ff3dfc4a496de$var$canNotTraverseDeeper","$673ff3dfc4a496de$var$getLastOfPath","path","Empty","stack","split","stackIndex","length","prototype","hasOwnProperty","k","$673ff3dfc4a496de$var$setPath","newValue","undefined","p","slice","last","$673ff3dfc4a496de$var$pushPath","concat","$673ff3dfc4a496de$var$getPath","$673ff3dfc4a496de$var$getPathWithDefaults","data","defaultData","$673ff3dfc4a496de$var$deepExtend","target","source","overwrite","prop","String","$673ff3dfc4a496de$var$regexEscape","str","$673ff3dfc4a496de$var$_entityMap","$673ff3dfc4a496de$var$escape","$673ff3dfc4a496de$var$chars","$673ff3dfc4a496de$var$looksLikeObjectPathRegExpCache","constructor","capacity","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","regExpNew","RegExp","delete","shift","$673ff3dfc4a496de$var$looksLikeObjectPath","nsSeparator","keySeparator","possibleChars","c","r","map","join","matched","test","ki","substring","$673ff3dfc4a496de$var$deepFind","arguments","tokens","current","next","nextPath","$673ff3dfc4a496de$var$getCleanedCode","$673ff3dfc4a496de$var$consoleLogger","type","args","output","warn","error","apply","$673ff3dfc4a496de$var$Logger","concreteLogger","options","prefix","logger","debug","_len","Array","_key","forward","_len2","_key2","_len3","_key3","deprecate","_len4","_key4","lvl","debugOnly","create","moduleName","clone","$673ff3dfc4a496de$var$baseLogger","$673ff3dfc4a496de$var$EventEmitter","observers","on","events","listener","event","numListeners","off","emit","cloned","from","entries","_ref","observer","numTimesAdded","_ref2","$673ff3dfc4a496de$var$ResourceStore","ns","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","splice","getResource","lng","isArray","result","addResource","silent","addResources","resources","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","keys","find","toJSON","$673ff3dfc4a496de$var$postProcessor","processors","addPostProcessor","name","handle","translator","processor","process","$673ff3dfc4a496de$var$checkedLoadedFor","$673ff3dfc4a496de$var$shouldHandleAsObject","$673ff3dfc4a496de$var$Translator","services","changeLanguage","exists","interpolation","resolved","extractFromKey","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","noObject","returnedObjectHandler","resTypeIsArray","copy","newKeyToUse","deepKey","extendTranslation","usedDefault","isValidLookup","resForMissing","missingKeyNoValueFallbackToKey","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","_this","defaultVariables","skipInterpolation","nestBef","skipOnVariables","nb","interpolate","na","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","possibleKey","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","pop","returnNull","returnEmptyString","resourceStore","useOptionsReplaceForData","$673ff3dfc4a496de$var$LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngOnly","supportedLng","fallbacks","fallbackCode","fallbackCodes","addCode","fc","$673ff3dfc4a496de$var$suffixesOrder","zero","one","two","few","many","other","$673ff3dfc4a496de$var$dummyRule","select","resolvedOptions","pluralCategories","$673ff3dfc4a496de$var$PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","rule","cleanedCode","cacheKey","PluralRules","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","$673ff3dfc4a496de$var$deepFindWithDefaults","$673ff3dfc4a496de$var$regexSafe","val","$673ff3dfc4a496de$var$Interpolator","format","escapeValue","escape","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","todos","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","elem","reduce","$673ff3dfc4a496de$var$parseFormatStr","formatStr","formatName","formatOptions","optStr","currency","range","opts","opt","rest","trimmedKey","isNaN","$673ff3dfc4a496de$var$createCachedFormatter","fn","cache","optForCache","formatParams","formatter","$673ff3dfc4a496de$var$Formatter","formats","number","NumberFormat","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","list","ListFormat","addCached","findIndex","mem","formatted","valOptions","locale","$673ff3dfc4a496de$var$removePending","q","pending","pendingCount","$673ff3dfc4a496de$var$Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","callback","toLoad","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","done","loadedKeys","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","$673ff3dfc4a496de$var$get","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","$673ff3dfc4a496de$var$transformOptions","initImmediate","$673ff3dfc4a496de$var$noop","$673ff3dfc4a496de$var$bindMemberFunctions","inst","mems","getOwnPropertyNames","getPrototypeOf","$673ff3dfc4a496de$var$I18n","modules","external","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","storeApi","storeApiChained","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","li","lngInLngs","_this2","isLanguageChangingTo","setLngProps","setLng","cacheUserLanguage","async","detect","getFixedT","keyPrefix","_this3","fixedT","resultKey","_len5","_key5","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","rtlLngs","createInstance","cloneInstance","forkResourceStore","mergedOptions","membersToCopy","clonedData","prev","acc","_len6","_key6"],"version":3,"file":"index.5ba705ae.js.map"}
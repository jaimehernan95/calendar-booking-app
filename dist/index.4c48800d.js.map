{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,C,EEAA,EAAiB,KAAK,KAAK,CAAC,2Y,I,E,C,ECA5B,EAAiB,KAAK,KAAK,CAAC,2YFK5B,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,IAAI,CAAC,CACT,IAAK,KACL,YAAa,KACb,UAAW,CACP,GAAI,CAAE,YAAa,EAAA,EAAG,EACtB,GAAI,CAAE,YAAa,EAAA,EAAG,CAC1B,CACJ,GAAG,IAAI,CAAC,KACJ,QAAQ,GAAG,CAAC,uBACZ,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,IACA,AAIJ,WACI,IAAM,EAAiB,SAAS,cAAc,CAAC,kBAC3C,GACA,EAAe,gBAAgB,CAAC,SAAU,AAAC,IACvC,IAAM,EAAmB,EAAO,MAAM,CAAuB,KAAK,CAClE,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,cAAc,CAAC,GAAkB,IAAI,CAAC,KAC1C,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,EAAA,CAAkB,EACvD,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,GACJ,EACJ,EAER,IAdI,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,GACJ,GAgBA,SAAS,gBAAgB,CAAC,mBAAoB,KACf,SAAS,cAAc,CAAC,wBAE/C,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,IAEA,QAAQ,KAAK,CAAC,kCAEtB","sources":["<anon>","src/index.ts","src/locales/en.json","src/locales/fr.json"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $8RAYl = parcelRequire(\"8RAYl\");\n\nvar $euqVc = parcelRequire(\"euqVc\");\nvar $f7f1de8e150b45e2$exports = {};\n$f7f1de8e150b45e2$exports = JSON.parse(\"{\\\"title\\\":\\\"Booking Schedule\\\",\\\"instructions\\\":\\\"Click on the day button to book the time slot\\\",\\\"months\\\":[\\\"January\\\",\\\"February\\\",\\\"March\\\",\\\"April\\\",\\\"May\\\",\\\"June\\\",\\\"July\\\",\\\"August\\\",\\\"September\\\",\\\"October\\\",\\\"November\\\",\\\"December\\\"],\\\"daysOfWeek\\\":[\\\"Sunday\\\",\\\"Monday\\\",\\\"Tuesday\\\",\\\"Wednesday\\\",\\\"Thursday\\\",\\\"Friday\\\",\\\"Saturday\\\"],\\\"times\\\":[\\\"9:00 AM\\\",\\\"10:00 AM\\\",\\\"11:00 AM\\\",\\\"12:00 PM\\\",\\\"1:00 PM\\\",\\\"2:00 PM\\\",\\\"3:00 PM\\\",\\\"4:00 PM\\\"]}\");\n\n\nvar $2418330d8c6d6f04$exports = {};\n$2418330d8c6d6f04$exports = JSON.parse('{\"title\":\"Planning des r\\xe9servations\",\"instructions\":\"Cliquez sur le bouton du jour pour r\\xe9server un cr\\xe9neau horaire\",\"months\":[\"Janvier\",\"F\\xe9vrier\",\"Mars\",\"Avril\",\"Mai\",\"Juin\",\"Juillet\",\"Ao\\xfbt\",\"Septembre\",\"Octobre\",\"Novembre\",\"D\\xe9cembre\"],\"daysOfWeek\":[\"Dimanche\",\"Lundi\",\"Mardi\",\"Mercredi\",\"Jeudi\",\"Vendredi\",\"Samedi\"],\"times\":[\"9h00\",\"10h00\",\"11h00\",\"12h00\",\"13h00\",\"14h00\",\"15h00\",\"16h00\"]}');\n\n\n(0, $8RAYl.default).init({\n    lng: 'en',\n    fallbackLng: 'en',\n    resources: {\n        en: {\n            translation: (0, (/*@__PURE__*/$parcel$interopDefault($f7f1de8e150b45e2$exports)))\n        },\n        fr: {\n            translation: (0, (/*@__PURE__*/$parcel$interopDefault($2418330d8c6d6f04$exports)))\n        }\n    }\n}).then(()=>{\n    console.log('i18next initialized');\n    (0, $euqVc.updateUI)();\n    $b4e14b6b8da86996$var$setupLanguageSwitcher();\n    (0, $euqVc.setupCalendar)();\n});\nfunction $b4e14b6b8da86996$var$setupLanguageSwitcher() {\n    const languageSwitch = document.getElementById('languageSwitch');\n    if (languageSwitch) languageSwitch.addEventListener('change', (event)=>{\n        const selectedLanguage = event.target.value;\n        (0, $8RAYl.default).changeLanguage(selectedLanguage).then(()=>{\n            console.log(`Language switched to: ${selectedLanguage}`);\n            (0, $euqVc.updateUI)();\n        });\n    });\n}\n// Ensuring the DOM is ready before initializing the calendar\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    const timeSlotsContainer = document.getElementById('time-slots-container');\n    if (timeSlotsContainer) (0, $euqVc.setupCalendar)(); // Initialize the calendar\n    else console.error('#time-slots-container not found');\n});\n\n\n//# sourceMappingURL=index.4c48800d.js.map\n","import i18next from 'i18next';\nimport { updateUI, setupCalendar } from './app';\nimport en from './locales/en.json';\nimport fr from './locales/fr.json';\n\ni18next.init({\n    lng: 'en',  // Default language\n    fallbackLng: 'en',\n    resources: {\n        en: { translation: en },\n        fr: { translation: fr },\n    },\n}).then(() => {\n    console.log('i18next initialized');\n    updateUI();\n    setupLanguageSwitcher();\n    setupCalendar();\n});\n\nfunction setupLanguageSwitcher() {\n    const languageSwitch = document.getElementById('languageSwitch') as HTMLSelectElement;\n    if (languageSwitch) {\n        languageSwitch.addEventListener('change', (event) => {\n            const selectedLanguage = (event.target as HTMLSelectElement).value;\n            i18next.changeLanguage(selectedLanguage).then(() => {\n                console.log(`Language switched to: ${selectedLanguage}`);\n                updateUI();\n            });\n        });\n    }\n}\n\n// Ensuring the DOM is ready before initializing the calendar\ndocument.addEventListener('DOMContentLoaded', () => {\n    const timeSlotsContainer = document.getElementById('time-slots-container');\n    if (timeSlotsContainer) {\n        setupCalendar();  // Initialize the calendar\n    } else {\n        console.error('#time-slots-container not found');\n    }\n});\n","{\n  \"title\": \"Booking Schedule\",\n  \"instructions\": \"Click on the day button to book the time slot\",\n  \"months\": [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  \"daysOfWeek\": [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  \"times\": [\"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\"]\n}\n","{\n  \"title\": \"Planning des réservations\",\n  \"instructions\": \"Cliquez sur le bouton du jour pour réserver un créneau horaire\",\n  \"months\": [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n  \"daysOfWeek\": [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"],\n  \"times\": [\"9h00\", \"10h00\", \"11h00\", \"12h00\", \"13h00\", \"14h00\", \"15h00\", \"16h00\"]\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$8RAYl","$euqVc","$f7f1de8e150b45e2$exports","JSON","parse","$2418330d8c6d6f04$exports","lng","fallbackLng","resources","en","translation","fr","then","console","log","updateUI","$b4e14b6b8da86996$var$setupLanguageSwitcher","languageSwitch","document","getElementById","addEventListener","event","selectedLanguage","target","value","changeLanguage","setupCalendar","error"],"version":3,"file":"index.4c48800d.js.map"}